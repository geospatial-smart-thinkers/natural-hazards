{"version":3,"file":"static/js/959.591e4217.chunk.js","mappings":"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","sources":["components/ExportMapButton.jsx","components/LayerControlBtn.jsx","maps/LightingMap.jsx","utilities/Functions.jsx","../node_modules/@react-leaflet/core/lib/dom.js","../node_modules/react-leaflet/lib/Pane.js"],"sourcesContent":["import React from 'react'\nimport jsPDF from 'jspdf';\nimport domtoimage from 'dom-to-image';\nimport { AiFillPrinter } from 'react-icons/ai';\nimport { useAlertContext } from '../context/AlertContext';\n\nconst ExportMapButton = ({ mapContainerRef, mapTitle }) => {\n    const { setAlertMessage, setShowAlert } = useAlertContext();\n    const handleExportMapPDF = () => {\n        const mapContainer = mapContainerRef.current;\n        const viewportWidth = window.innerWidth;\n\n        setAlertMessage('Your download is starting')\n        setShowAlert(true)\n\n\n        const options = {\n            width: mapContainer.offsetWidth * 2,\n            height: mapContainer.offsetHeight * 2,\n            style: {\n                transform: 'scale(2)',\n                transformOrigin: 'top left',\n                width: '100%',\n                height: 'auto',\n            },\n        };\n\n        domtoimage\n            .toBlob(mapContainer, options)\n            .then((blob) => {\n                const reader = new FileReader();\n                reader.onloadend = () => {\n                    const img = new Image();\n                    img.onload = () => {\n                        const aspectRatio = img.width / img.height;\n                        const pdfOrientation = viewportWidth <= 767 ? 'portrait' : 'landscape';\n                        const pdf = new jsPDF(pdfOrientation, 'px', 'a4');\n\n                        // Add title at the top\n                        const title = mapTitle;\n                        const titleFontSize = 16;\n                        const titleTextWidth = pdf.getStringUnitWidth(title) * titleFontSize / pdf.internal.scaleFactor;\n                        const titleTextX = (pdf.internal.pageSize.getWidth() - titleTextWidth) / 2;\n                        const titleTextY = 20; // Y-coordinate for the title\n\n                        pdf.setFontSize(titleFontSize);\n                        pdf.text(titleTextX, titleTextY, title);\n\n\n                        if (viewportWidth <= 767) {\n                            const pdfHeight = pdf.internal.pageSize.getHeight() - 50; // Set the desired height for PDF if viewport width <= 767\n                            const pdfWidth = pdfHeight * aspectRatio;\n                            const x = (pdf.internal.pageSize.getWidth() - pdfWidth) / 2;\n                            const y = (pdf.internal.pageSize.getHeight() - pdfHeight) / 2;\n                            pdf.addImage(img, 'PNG', x, y, pdfWidth, pdfHeight);\n                        } else {\n                            const pdfWidth = pdf.internal.pageSize.getWidth(); // Use A4 width for PDF if viewport width > 767\n                            const pdfHeight = pdfWidth / aspectRatio;\n                            const x = 0;\n                            const y = (pdf.internal.pageSize.getHeight() - pdfHeight) / 2;\n                            pdf.addImage(img, 'PNG', x, y, pdfWidth, pdfHeight);\n                        }\n\n                        // Add text line at the bottom\n                        const websiteName = 'This map has been downloaded from GEOSPATIAL SMART THINKERS';\n                        const fontSize = 10;\n                        const textWidth = pdf.getStringUnitWidth(websiteName) * fontSize / pdf.internal.scaleFactor;\n                        const textX = (pdf.internal.pageSize.getWidth() - textWidth) / 2; // X-coordinate for center alignment\n                        const textY = pdf.internal.pageSize.getHeight() - 10; // Y-coordinate for the text\n\n                        pdf.setFontSize(fontSize);\n                        pdf.text(textX, textY, websiteName);\n\n                        const pdfOptions = {\n                            compress: true, // Enable compression\n                            quality: 0.4, // Adjust the quality (0.0 - 1.0, default is 0.9)\n                        };\n\n                        pdf.save('map.pdf', pdfOptions);\n                        setAlertMessage('Map exported as PDF successfully!')\n                        setShowAlert(true)\n                    };\n                    img.src = reader.result;\n                };\n                reader.readAsDataURL(blob);\n            })\n            .catch((error) => {\n                console.error('Error exporting map image:', error);\n            });\n    };\n\n    return (\n        <button onClick={handleExportMapPDF} className=\"print_map_btn\">\n            <AiFillPrinter />\n        </button>\n    )\n}\n\nexport default ExportMapButton","import React, { useState } from 'react';\nimport layerIcon from \"../assets/layer-control.png\";\n\nconst LayerControlBtn = ({ setBaseLayers, baseLayers, layersItems, setSingleBaseLayer, singlebaseLayer, singleLayerItems }) => {\n\n    const handleBaseLayerChange = (event) => {\n        const value = event.target.value;\n        if (event.target.checked) {\n            setBaseLayers((prevLayers) => [...prevLayers, value]);\n        } else {\n            setBaseLayers((prevLayers) => prevLayers.filter((layer) => layer !== value));\n        }\n    };\n\n    const handleSingleBaseLayerChange = (event) => {\n        setSingleBaseLayer(event.target.value);\n    };\n\n\n    const [isLayerControlVisible, setLayerControlVisible] = useState(false);\n\n    const handleLayerIconHover = () => {\n        setLayerControlVisible(true);\n    };\n\n    const handleLayerControlHover = () => {\n        setLayerControlVisible(true);\n    };\n\n    const handleLayerControlLeave = () => {\n        setLayerControlVisible(false);\n    };\n\n    return (\n        <>\n            <div\n                className=\"layer_icon\"\n                onMouseEnter={handleLayerIconHover}\n            >\n                <img src={layerIcon} alt=\"Layer\" />\n            </div>\n\n            <div\n                className={`layercontrol_container ${isLayerControlVisible ? \"visible\" : \"\"}`}\n                onMouseEnter={handleLayerControlHover}\n                onMouseLeave={handleLayerControlLeave}\n            >\n\n                {singleLayerItems.map((item) => (\n                    <div key={item.value} className=\"layercontrol_item\">\n                        <label>\n                            <input\n                                type=\"radio\"\n                                value={item.value}\n                                checked={singlebaseLayer === item.value}\n                                onChange={handleSingleBaseLayerChange}\n                            />\n                            <span>{item.label}</span>\n                        </label>\n                    </div>\n                ))}\n\n                {layersItems.map((item) => (\n                    <div key={item.value} className=\"layercontrol_item\">\n                        <label>\n                            <input\n                                type=\"checkbox\"\n                                value={item.value}\n                                checked={baseLayers.includes(item.value)}\n                                onChange={handleBaseLayerChange}\n                            />\n                            <span>{item.label}</span>\n                        </label>\n                    </div>\n                ))}\n            </div>\n        </>\n    );\n};\n\nexport default LayerControlBtn;\n","import React, { useRef, useState } from \"react\";\nimport { setWindowWidth } from \"../utilities/Functions\";\nimport { setInitialMapZoom } from \"../utilities/Functions\";\nimport { setDragging } from \"../utilities/Functions\";\nimport {\n    MapContainer,\n    useMapEvents,\n    GeoJSON,\n    ScaleControl, Pane\n} from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport 'leaflet-fullscreen/dist/Leaflet.fullscreen.js';\nimport 'leaflet-fullscreen/dist/leaflet.fullscreen.css';\nimport ExportMapButton from \"../components/ExportMapButton\";\nimport LayerControlBtn from \"../components/LayerControlBtn\";\nimport Lightening_Deaths from \"../data/Lightening_Deaths.json\"\n// import indiaBasin from '../data/indiaBasin.json';\nimport CloudToGroundLightningStrikes from '../data/CloudToGroundLightningStrikes.json';\n\n\nconst Legend = ({ baseLayers, singlebaseLayer }) => {\n\n    const Lightening_DeathsLegend = [\n        { color: \"#1D5D9B\", label: \"> 400\" },\n        { color: \"#068FFF\", label: \"300 - 400\" },\n        { color: \"#749BC2\", label: \"200 - 300\" },\n        { color: \"#99DBF5\", label: \"100 - 200\" },\n        { color: \"#C5DFF8\", label: \"50 - 100\" },\n        { color: \"white\", label: \"< 50\" },\n    ];\n    const CloudToGroundLightningStrikesLegend = [\n        { color: \"#1D5D9B\", label: \"> 200000\" },\n        { color: \"#068FFF\", label: \"100000 - 200000\" },\n        { color: \"#749BC2\", label: \"50000 - 100000\" },\n        { color: \"#99DBF5\", label: \"10000 - 50000\" },\n        { color: \"#C5DFF8\", label: \"1000 - 10000\" },\n        { color: \"white\", label: \"< 1000\" },\n    ];\n\n\n    // const indiaBasinLegend = [\n    //     { color: \"darkblue\", label: \"India Basin\" },\n    // ];\n\n\n\n\n\n\n    return (\n        <>\n            {baseLayers.length > 0 && (\n                <div className=\"legend_container\">\n                    <h5>Legends</h5>\n                    {singlebaseLayer === \"Lightening_Deaths\" && (\n                        <div>\n                            <p>Deaths due to Lightening</p>\n                            <p>(in year 2020)</p>\n                            {Lightening_DeathsLegend.map((item) => (\n                                <div key={item.color} className=\"legend_item\">\n                                    <span\n                                        className=\"legend_item_square\"\n                                        style={{ backgroundColor: item.color }}\n                                    />\n                                    <span className=\"legend-label\">{item.label}</span>\n                                </div>\n                            ))}\n                        </div>\n                    )}\n                    {singlebaseLayer === \"CloudToGroundLightningStrikes\" && (\n                        <div>\n                            <p>Cloud to Ground Lightning Strikes</p>\n                            <p>(in year 2021)</p>\n                            {CloudToGroundLightningStrikesLegend.map((item) => (\n                                <div key={item.color} className=\"legend_item\">\n                                    <span\n                                        className=\"legend_item_square\"\n                                        style={{ backgroundColor: item.color }}\n                                    />\n                                    <span className=\"legend-label\">{item.label}</span>\n                                </div>\n                            ))}\n                        </div>\n                    )}\n                    {/* {baseLayers.includes(\"indiaBasin\") && (\n                        <div>\n                            {indiaBasinLegend.map((item) => (\n                                <div key={item.color} className=\"legend_item\">\n                                    <span\n                                        className=\"legend_item_square\"\n                                        style={{ backgroundColor: item.color }}\n                                    />\n                                    <span className=\"legend-label\">{item.label}</span>\n                                </div>\n                            ))}\n                        </div>\n                    )} */}\n                </div>\n            )}\n        </>\n    );\n};\n\n\nconst LightingMap = () => {\n    const [mousePosition, setMousePosition] = useState({ lat: 0, lng: 0 });\n    const mapContainerRef = useRef(null);\n\n    const HandleMouseHover = () => {\n        useMapEvents({\n            mousemove: (e) => {\n                setMousePosition(e.latlng);\n            },\n        });\n\n        return null;\n    };\n\n    const [baseLayers, setBaseLayers] = useState([\"\",]);\n\n    const layersItems = [\n        // { value: \"indiaBasin\", label: \"River Basin Boundary\" },\n    ];\n\n\n    const [singlebaseLayer, setSingleBaseLayer] = useState(\"Lightening_Deaths\");\n    const singleLayerItems = [\n        { value: \"Lightening_Deaths\", label: \"Lightening Deaths\" },\n        { value: \"CloudToGroundLightningStrikes\", label: \"Cloud to Ground Lightning Strikes\" },\n    ];\n\n\n    const Lightening_DeathsDensity = (density => {\n        return density > 400\n            ? '#1D5D9B'\n            : density > 300\n                ? '#068FFF'\n                : density > 200\n                    ? '#749BC2'\n                    : density > 100\n                        ? '#99DBF5'\n                        : density > 50\n                            ? '#C5DFF8'\n                            : 'white';\n    })\n    const Lightening_DeathsStyle = (feature => {\n        return ({\n            fillColor: Lightening_DeathsDensity(feature.properties.Year_2020),\n            weight: 1,\n            opacity: 1,\n            color: 'black',\n            dashArray: '2',\n            fillOpacity: 1\n        });\n    });\n\n    function onEachFeatureLightening_Deaths(feature, layer) {\n        layer.on(\"mouseover\", function (e) {\n            if (feature.properties && feature.properties.Name) {\n                const popupContent = `\n          <div>\n            State: ${feature.properties.Name}<br/>\n            Deaths in 2018: ${feature.properties.Year_2018}<br/>\n            Deaths in 2019: ${feature.properties.Year_2019}<br/>\n            Deaths in 2020: ${feature.properties.Year_2020}<br/>\n          </div>\n        `;\n                layer.bindTooltip(popupContent, { sticky: true });\n            }\n            layer.openTooltip();\n        });\n\n        layer.on(\"mouseout\", function () {\n            layer.closeTooltip();\n        });\n    }\n\n\n    const CloudToGroundLightningStrikesDensity = (density => {\n        return density > 200000\n            ? '#1D5D9B'\n            : density > 100000\n                ? '#068FFF'\n                : density > 50000\n                    ? '#749BC2'\n                    : density > 10000\n                        ? '#99DBF5'\n                        : density > 1000\n                            ? '#C5DFF8'\n                            : 'white';\n    })\n    const CloudToGroundLightningStrikesStyle = (feature => {\n        return ({\n            fillColor: CloudToGroundLightningStrikesDensity(feature.properties.CG),\n            weight: 1,\n            opacity: 1,\n            color: 'black',\n            dashArray: '2',\n            fillOpacity: 1\n        });\n    });\n\n    function onEachFeatureCloudToGroundLightningStrikes(feature, layer) {\n        layer.on(\"mouseover\", function (e) {\n            if (feature.properties && feature.properties.Name) {\n                const popupContent = `\n          <div>\n            State: ${feature.properties.Name}<br/>\n            CG: ${feature.properties.CG}<br/>\n          </div>\n        `;\n                layer.bindTooltip(popupContent, { sticky: true });\n            }\n            layer.openTooltip();\n        });\n\n        layer.on(\"mouseout\", function () {\n            layer.closeTooltip();\n        });\n    }\n\n\n\n\n\n\n\n    return (\n        <div className=\"main_page_container\">\n            <div className=\"row\">\n                <div className=\"col-md-3\">\n                    <div className=\"info_container\">\n                        <h3>Lighting</h3>\n                        <p>\n                            India experiences a significant number of lightning strikes, particularly during the monsoon season. Lightning occurs due to the discharge of atmospheric electricity between charged particles. These strikes can be dangerous, causing injuries and fatalities, as well as damage to structures and electrical infrastructure. Recognizing the risks associated with lightning, the Indian Meteorological Department has developed a Lightning Early Warning System (LEWS) to alert people about potential lightning activity in their area. Public awareness campaigns and safety guidelines are also promoted to minimize the impact of lightning and protect individuals from its hazards.\n                        </p>\n\n                    </div>\n\n                </div>\n\n                <div className=\"col-md-9\">\n                    <div className=\"map_container\" ref={mapContainerRef}>\n                        <MapContainer\n                            center={[22, 84]}\n                            fullscreenControl={true}\n                            zoom={setInitialMapZoom()}\n                            style={setWindowWidth()}\n                            attributionControl={false}\n                            scrollWheelZoom={false}\n                            zoomDelta={0.25}\n                            zoomSnap={0}\n                            minZoom={3}\n                            keyboard={false}\n                            dragging={setDragging()}\n                            // touchZoom={false}\n                            doubleClickZoom={false}\n                            maxZoom={9}\n                        >\n                            <HandleMouseHover />\n                            <ScaleControl />\n\n                            <LayerControlBtn setBaseLayers={setBaseLayers} baseLayers={baseLayers} layersItems={layersItems} singlebaseLayer={singlebaseLayer} setSingleBaseLayer={setSingleBaseLayer} singleLayerItems={singleLayerItems} />\n\n\n                            <Pane name=\"Lightening_Deaths\" style={{ zIndex: -2 }}>\n                                {singlebaseLayer === \"Lightening_Deaths\" && (\n                                    <GeoJSON\n                                        data={Lightening_Deaths.features}\n                                        style={Lightening_DeathsStyle}\n                                        onEachFeature={onEachFeatureLightening_Deaths}\n                                    />\n                                )}\n                            </Pane>\n\n                            <Pane name=\"CloudToGroundLightningStrikes\" style={{ zIndex: -2 }}>\n                                {singlebaseLayer === \"CloudToGroundLightningStrikes\" && (\n                                    <GeoJSON\n                                        data={CloudToGroundLightningStrikes.features}\n                                        style={CloudToGroundLightningStrikesStyle}\n                                        onEachFeature={onEachFeatureCloudToGroundLightningStrikes}\n                                    />\n                                )}\n                            </Pane>\n\n                            {/* {baseLayers.includes(\"indiaBasin\") && (\n                                <GeoJSON\n                                    data={indiaBasin.features}\n                                    style={{\n                                        fillColor: \"none\",\n                                        weight: 2,\n                                        color: \"darkblue\",\n                                        interactive: false,\n                                    }}\n                                />\n                            )} */}\n\n\n\n                            <div\n                                style={{\n                                    position: \"absolute\",\n                                    bottom: 10,\n                                    right: 10,\n                                    backgroundColor: \"white\",\n                                    padding: 5,\n                                }}\n                            >\n                                Lat: {mousePosition.lat.toFixed(4)}, Long:{\" \"}\n                                {mousePosition.lng.toFixed(4)}\n                            </div>\n                            <div className=\"desktop_legend_container\">\n                            {baseLayers && <Legend baseLayers={baseLayers} singlebaseLayer={singlebaseLayer} />}\n                        </div>\n                            <ExportMapButton mapContainerRef={mapContainerRef} mapTitle=\"Natural Disaster: Lighting\" />\n                        </MapContainer>\n\n                        <div className=\"phone_legend_container\">\n                            {baseLayers && <Legend baseLayers={baseLayers} singlebaseLayer={singlebaseLayer} />}\n                        </div>\n\n                        \n                    </div>\n\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default LightingMap","\nexport const setWindowWidth=()=> {\n    var viewportWidth = window.innerWidth;\n    var windowWidth;\n    if (viewportWidth <= [767]) {\n        windowWidth = { width: '100%', height: \"600px\", backgroundColor: 'white', border: 'none', margin: 'auto', borderRadius: \"0px\", };\n    } else {\n        windowWidth = { width: '100%', height: \"600px\", backgroundColor: 'white', border: 'none', margin: 'auto', borderRadius: \"10px\", };\n    }\n    return windowWidth;\n}\n\n\nexport const setInitialMapZoom=()=> {\n    var viewportWidth = window.innerWidth;\n    var mapZoom;\n    if (viewportWidth <= [767]) {\n      mapZoom = [3.75];\n    } if (viewportWidth >= [768]) {\n      mapZoom = [4.5];\n    } if (viewportWidth >= [1600]) {\n      mapZoom = [4.5];\n    }\n    return mapZoom;\n  }\n\n  export const setDragging=()=> {\n    var viewportWidth = window.innerWidth;\n    var dragging;\n    if (viewportWidth <= [767]) {\n      dragging = false;\n    } if (viewportWidth >= [768]) {\n      dragging = true;\n    } \n    return dragging;\n  }","import { DomUtil } from 'leaflet';\nfunction splitClassName(className) {\n    return className.split(' ').filter(Boolean);\n}\nexport function addClassName(element, className) {\n    splitClassName(className).forEach((cls)=>{\n        DomUtil.addClass(element, cls);\n    });\n}\nexport function removeClassName(element, className) {\n    splitClassName(className).forEach((cls)=>{\n        DomUtil.removeClass(element, cls);\n    });\n}\nexport function updateClassName(element, prevClassName, nextClassName) {\n    if (element != null && nextClassName !== prevClassName) {\n        if (prevClassName != null && prevClassName.length > 0) {\n            removeClassName(element, prevClassName);\n        }\n        if (nextClassName != null && nextClassName.length > 0) {\n            addClassName(element, nextClassName);\n        }\n    }\n}\n","import { LeafletProvider, addClassName, useLeafletContext } from '@react-leaflet/core';\nimport React, { forwardRef, useState, useEffect, useImperativeHandle, useMemo } from 'react';\nimport { createPortal } from 'react-dom';\nconst DEFAULT_PANES = [\n    'mapPane',\n    'markerPane',\n    'overlayPane',\n    'popupPane',\n    'shadowPane',\n    'tilePane',\n    'tooltipPane'\n];\nfunction omitPane(obj, pane) {\n    const { [pane]: _p , ...others } = obj;\n    return others;\n}\nfunction createPane(name, props, context) {\n    if (DEFAULT_PANES.indexOf(name) !== -1) {\n        throw new Error(`You must use a unique name for a pane that is not a default Leaflet pane: ${name}`);\n    }\n    if (context.map.getPane(name) != null) {\n        throw new Error(`A pane with this name already exists: ${name}`);\n    }\n    const parentPaneName = props.pane ?? context.pane;\n    const parentPane = parentPaneName ? context.map.getPane(parentPaneName) : undefined;\n    const element = context.map.createPane(name, parentPane);\n    if (props.className != null) {\n        addClassName(element, props.className);\n    }\n    if (props.style != null) {\n        Object.keys(props.style).forEach((key)=>{\n            // @ts-ignore\n            element.style[key] = props.style[key];\n        });\n    }\n    return element;\n}\nfunction PaneComponent(props, forwardedRef) {\n    const [paneName] = useState(props.name);\n    const [paneElement, setPaneElement] = useState(null);\n    useImperativeHandle(forwardedRef, ()=>paneElement, [\n        paneElement\n    ]);\n    const context = useLeafletContext();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const newContext = useMemo(()=>({\n            ...context,\n            pane: paneName\n        }), [\n        context\n    ]);\n    useEffect(()=>{\n        setPaneElement(createPane(paneName, props, context));\n        return function removeCreatedPane() {\n            const pane = context.map.getPane(paneName);\n            pane?.remove?.();\n            // @ts-ignore map internals\n            if (context.map._panes != null) {\n                // @ts-ignore map internals\n                context.map._panes = omitPane(context.map._panes, paneName);\n                // @ts-ignore map internals\n                context.map._paneRenderers = omitPane(// @ts-ignore map internals\n                context.map._paneRenderers, paneName);\n            }\n        };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    return props.children != null && paneElement != null ? /*#__PURE__*/ createPortal(/*#__PURE__*/ React.createElement(LeafletProvider, {\n        value: newContext\n    }, props.children), paneElement) : null;\n}\nexport const Pane = /*#__PURE__*/ forwardRef(PaneComponent);\n"],"names":["_ref","mapContainerRef","mapTitle","_useAlertContext","useAlertContext","setAlertMessage","setShowAlert","_jsx","onClick","mapContainer","current","viewportWidth","window","innerWidth","options","width","offsetWidth","height","offsetHeight","style","transform","transformOrigin","domtoimage","then","blob","reader","FileReader","onloadend","img","Image","onload","aspectRatio","pdfOrientation","pdf","jsPDF","title","titleTextWidth","getStringUnitWidth","internal","scaleFactor","titleTextX","pageSize","getWidth","setFontSize","text","pdfHeight","getHeight","pdfWidth","x","y","addImage","websiteName","textWidth","textX","textY","save","compress","quality","src","result","readAsDataURL","catch","error","console","className","children","AiFillPrinter","setBaseLayers","baseLayers","layersItems","setSingleBaseLayer","singlebaseLayer","singleLayerItems","handleBaseLayerChange","event","value","target","checked","prevLayers","concat","_toConsumableArray","filter","layer","handleSingleBaseLayerChange","_useState","useState","_useState2","_slicedToArray","isLayerControlVisible","setLayerControlVisible","_jsxs","_Fragment","onMouseEnter","alt","onMouseLeave","map","item","type","onChange","label","includes","Legend","length","color","backgroundColor","lat","lng","mousePosition","setMousePosition","useRef","HandleMouseHover","useMapEvents","mousemove","e","latlng","_useState3","_useState4","_useState5","_useState6","ref","MapContainer","center","fullscreenControl","zoom","setInitialMapZoom","setWindowWidth","attributionControl","scrollWheelZoom","zoomDelta","zoomSnap","minZoom","keyboard","dragging","setDragging","doubleClickZoom","maxZoom","ScaleControl","LayerControlBtn","Pane","name","zIndex","GeoJSON","data","Lightening_Deaths","feature","fillColor","density","properties","Year_2020","weight","opacity","dashArray","fillOpacity","onEachFeature","on","Name","popupContent","Year_2018","Year_2019","bindTooltip","sticky","openTooltip","closeTooltip","CloudToGroundLightningStrikes","CG","position","bottom","right","padding","toFixed","ExportMapButton","border","margin","borderRadius","mapZoom","splitClassName","split","Boolean","addClassName","element","forEach","cls","DomUtil","addClass","DEFAULT_PANES","omitPane","obj","pane","_objectWithoutProperties","_toPropertyKey","PaneComponent","props","forwardedRef","paneName","paneElement","setPaneElement","useImperativeHandle","context","useLeafletContext","newContext","useMemo","_objectSpread","useEffect","_props$pane","indexOf","Error","getPane","parentPaneName","parentPane","undefined","createPane","Object","keys","key","_pane$remove","remove","call","_panes","_paneRenderers","createPortal","React","LeafletProvider","forwardRef"],"sourceRoot":""}