{"version":3,"file":"static/js/917.fb8a6f23.chunk.js","mappings":"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","sources":["maps/DroughtMap.jsx","../node_modules/@react-leaflet/core/lib/dom.js","../node_modules/react-leaflet/lib/Pane.js"],"sourcesContent":["import React, { useRef, useState } from \"react\";\nimport indiastates from '../data/indiaStates.json';\nimport indiaBasin from '../data/indiaBasin.json';\nimport AnnualTemperature from '../data/Annual_Temperature.json';\nimport Rivers from '../data/Rivers.json';\nimport Monsoon_Rain from \"../data/Monsoon_Rain.json\"\nimport Monsoon_Track_Onset_of_monsoon from \"../data/Monsoon_Track_Onset_of_monsoon.json\"\nimport Monsoon_Track_Retreat_of_monsoon from \"../data/Monsoon_Track_Retreat_of_monsoon.json\"\nimport DroughtProneArea from '../data/DroughtProneArea.json';\nimport { setWindowWidth } from \"../utilities/Functions\";\nimport { setInitialMapZoom } from \"../utilities/Functions\";\nimport { setDragging } from \"../utilities/Functions\";\nimport {\n  MapContainer,\n  useMapEvents,\n  GeoJSON,\n  ScaleControl, Pane\n} from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport 'leaflet-fullscreen/dist/Leaflet.fullscreen.js';\nimport 'leaflet-fullscreen/dist/leaflet.fullscreen.css';\nimport ExportMapButton from \"../components/ExportMapButton\";\nimport LayerControlBtn from \"../components/LayerControlBtn\";\nimport { Link } from \"react-router-dom\";\n\n\nconst Legend = ({ baseLayers }) => {\n  const Monsoon_RainLegend = [\n    { color: \"red\", label: \"> 2500\" },\n    { color: \"purple\", label: \"2000-2500\" },\n    { color: \"blue\", label: \"1500-2000\" },\n    { color: \"green\", label: \"1000-1500\" },\n    { color: \"orange\", label: \"500-1000\" },\n    { color: \"yellow\", label: \"< 500\" },\n\n  ];\n  const Monsoon_Track_Retreat_of_monsoonLegend = [\n    { color: \"brown\", label: \"Monsoon Track (Retreat of monsoon)\" },\n  ];\n  const Monsoon_Track_Onset_of_monsoonLegend = [\n    { color: \"black\", label: \"Monsoon Track (Onset of monsoon)\" },\n  ];\n  const DroughtProneAreaLegend = [\n    { color: \"orange\", label: \"Drought Prone Area\" },\n  ];\n\n  const RiversLegend = [\n    { color: \"blue\", label: \"Rivers\" },\n  ];\n\n  const indiaBasinLegend = [\n    { color: \"darkblue\", label: \"India Basin\" },\n  ];\n  const AnnualTemperatureLegend = [\n    { color: \"skyblue\", label: \"Very Low Temperature\" },\n    { color: \"yellow\", label: \"Low Temperature\" },\n    { color: \"orange\", label: \"Medium Temperature\" },\n    { color: \"red\", label: \"High Temperature\" },\n    { color: \"brown\", label: \"Very High Temperature\" },\n  ];\n\n  return (\n    <>\n      {baseLayers.length > 0 && (\n        <div className=\"legend_container\">\n          <h5>Legends</h5>\n          {baseLayers.includes(\"Monsoon_Rain\") && (\n            <div>\n              <p>Monsoon Annual Rainfall (mm)</p>\n              {Monsoon_RainLegend.map((item) => (\n                <div key={item.color} className=\"legend_item\">\n                  <span\n                    className=\"legend_item_square\"\n                    style={{ backgroundColor: item.color }}\n                  />\n                  <span className=\"legend-label\">{item.label}</span>\n                </div>\n              ))}\n            </div>\n          )}\n          {baseLayers.includes(\"Monsoon_Track_Retreat_of_monsoon\") && (\n            <div>\n              {Monsoon_Track_Retreat_of_monsoonLegend.map((item) => (\n                <div key={item.color} className=\"legend_item\">\n                  <span\n                    className=\"legend_item_square\"\n                    style={{ backgroundColor: item.color }}\n                  />\n                  <span className=\"legend-label\">{item.label}</span>\n                </div>\n              ))}\n            </div>\n          )}\n          {baseLayers.includes(\"Monsoon_Track_Onset_of_monsoon\") && (\n            <div>\n              {Monsoon_Track_Onset_of_monsoonLegend.map((item) => (\n                <div key={item.color} className=\"legend_item\">\n                  <span\n                    className=\"legend_item_square\"\n                    style={{ backgroundColor: item.color }}\n                  />\n                  <span className=\"legend-label\">{item.label}</span>\n                </div>\n              ))}\n            </div>\n          )}\n\n          {baseLayers.includes(\"AnnualTemperature\") && (\n            <div>\n              {AnnualTemperatureLegend.map((item) => (\n                <div key={item.color} className=\"legend_item\">\n                  <span\n                    className=\"legend_item_square\"\n                    style={{ backgroundColor: item.color }}\n                  />\n                  <span className=\"legend-label\">{item.label}</span>\n                </div>\n              ))}\n            </div>\n          )}\n\n          {baseLayers.includes(\"DroughtProneArea\") && (\n            <div>\n              {DroughtProneAreaLegend.map((item) => (\n                <div key={item.color} className=\"legend_item\">\n                  <span\n                    className=\"legend_item_square\"\n                    style={{ backgroundColor: item.color }}\n                  />\n                  <span className=\"legend-label\">{item.label}</span>\n                </div>\n              ))}\n            </div>\n          )}\n          {baseLayers.includes(\"Rivers\") && (\n            <div>\n              {RiversLegend.map((item) => (\n                <div key={item.color} className=\"legend_item\">\n                  <span\n                    className=\"legend_item_square\"\n                    style={{ backgroundColor: item.color }}\n                  />\n                  <span className=\"legend-label\">{item.label}</span>\n                </div>\n              ))}\n            </div>\n          )}\n          {baseLayers.includes(\"indiaBasin\") && (\n            <div>\n              {indiaBasinLegend.map((item) => (\n                <div key={item.color} className=\"legend_item\">\n                  <span\n                    className=\"legend_item_square\"\n                    style={{ backgroundColor: item.color }}\n                  />\n                  <span className=\"legend-label\">{item.label}</span>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      )}\n    </>\n  );\n};\n\n\n\nconst DroughtMap = () => {\n  const [mousePosition, setMousePosition] = useState({ lat: 0, lng: 0 });\n  const mapContainerRef = useRef(null);\n  const HandleMouseHover = () => {\n    useMapEvents({\n      mousemove: (e) => {\n        setMousePosition(e.latlng);\n      },\n    });\n\n    return null;\n  };\n\n  const DroughtProneAreaStyle = (feature) => {\n    if (feature.properties.DROUGHT === \"YES\") {\n      return ({\n        fillColor: 'orange',\n        weight: 1,\n        opacity: 1,\n        color: 'black',\n        dashArray: '2',\n        fillOpacity: 0.7\n      })\n    } else {\n      return ({\n        fillColor: 'white',\n        weight: 1,\n        opacity: 1,\n        color: 'black',\n        dashArray: '2',\n        fillOpacity: 0.9\n      })\n\n    }\n\n  }\n\n\n  function onEachFeatureMonsoonRain(feature, layer) {\n    layer.on(\"mouseover\", function (e) {\n      if (feature.properties && feature.properties.Name) {\n        const popupContent = `\n      <div>\n        STATE: ${feature.properties.Name}<br/>\n        Winter: ${feature.properties.Winter}<br/>\n        Pre_Monsoo: ${feature.properties.Pre_Monsoo}<br/>\n        SW__Monsoo: ${feature.properties.SW__Monsoo}<br/>\n        Post_Monso: ${feature.properties.Post_Monso}<br/>\n        Annual: ${feature.properties.Annual}<br/>\n      </div>\n    `;\n        layer.bindTooltip(popupContent, { sticky: true });\n      }\n      layer.openTooltip();\n    });\n\n    layer.on(\"mouseout\", function () {\n      layer.closeTooltip();\n    });\n  }\n\n  const MonsoonRainDensity = (density => {\n    return density > 2500\n      ? 'red'\n      : density > 2000\n        ? 'purple'\n        : density > 1500\n          ? 'blue'\n          : density > 1000\n            ? 'green'\n            : density > 500\n              ? 'orange'\n              : 'yellow';\n  })\n  const MonsoonRainStyle = (feature => {\n    return ({\n      fillColor: MonsoonRainDensity(feature.properties.Annual),\n      weight: 1,\n      opacity: 1,\n      color: 'black',\n      dashArray: '2',\n      fillOpacity: 0.5\n    });\n  });\n\n\n\n  const AnnualTemperatureDensity = (ZONE) => {\n    return ZONE === \"Very Low\"\n      ? \"skyblue\"\n      : ZONE === \"Low\"\n        ? \"yellow\"\n        : ZONE === \"Medium\"\n          ? \"orange\"\n          : ZONE === \"High\"\n            ? \"red\"\n            : ZONE === \"Very High\"\n              ? \"brown\"\n              : \"black\";\n  };\n  const AnnualTemperatureStyle = (feature) => {\n    return {\n      fillColor: AnnualTemperatureDensity(feature.properties.level),\n      weight: 1,\n      opacity: 1,\n      color: \"black\",\n      dashArray: '2',\n      fillOpacity: 1,\n      interactive: false,\n    };\n  };\n\n\n\n\n\n\n\n\n  function onEachFeatureDistrict(feature, layer) {\n    layer.on('mouseover', function (e) {\n      if (feature.properties && feature.properties.District) {\n        const popupContent = `\n      <div>\n        District: ${feature.properties.District}<br/>\n        STATE: ${feature.properties.STATE}\n      </div>\n    `;\n        layer.bindTooltip(popupContent, { sticky: true });\n      }\n      layer.openTooltip();\n    });\n\n    layer.on('mouseout', function () {\n      layer.closeTooltip();\n    });\n  }\n\n\n\n  const [baseLayers, setBaseLayers] = useState([\"DroughtProneArea\", \"Rivers\"]);\n\n  const layersItems = [\n    { value: \"DroughtProneArea\", label: \"Drought Prone Area\" },\n    { value: \"Rivers\", label: \"Rivers\" },\n    { value: \"indiaBasin\", label: \"River Basin Boundary\" },\n    { value: \"Monsoon_Rain\", label: \"Monsoon Rain\" },\n    { value: \"Monsoon_Track_Onset_of_monsoon\", label: \"Monsoon Track (Onset of monsoon)\" },\n    { value: \"Monsoon_Track_Retreat_of_monsoon\", label: \"Monsoon Track (Retreat of monsoon)\" },\n    { value: \"AnnualTemperature\", label: \"Annual Temperature\" },\n\n\n  ];\n\n  const [singlebaseLayer, setSingleBaseLayer] = useState(\"\");\n  const singleLayerItems = [\n\n\n\n  ];\n\n\n  return (\n    <div className=\"main_page_container\">\n      <div className=\"row\">\n        <div className=\"col-md-3\">\n          <div className=\"info_container\">\n            <h3>What is Drought?</h3>\n            <p>\n              Drought is a natural phenomenon characterized by an extended period of water scarcity in an area. It results from inadequate rainfall, excessive evaporation, and over utilization of water from various sources such as reservoirs and groundwater. Droughts can have a devastating impact on people, animals, and the environment. They can also lead to social unrest and conflict. <br />\n\n              The length of a drought can vary greatly. Some droughts may only last a few weeks, while others can persist for years. The most severe droughts can last for decades.\n            </p>\n\n            <Link to=\"/drought/drought-details\"> <button className=\"general_button\">Read More</button></Link>\n            <Link to=\"/quiz/drought\"> <button className=\"general_button\">Quiz</button></Link>\n\n          </div>\n\n        </div>\n\n        <div className=\"col-md-9\">\n          <div className=\"map_container\" ref={mapContainerRef}>\n            <MapContainer\n              center={[22, 84]}\n              fullscreenControl={true}\n              zoom={setInitialMapZoom()}\n              minZoom={setInitialMapZoom()}\n              style={setWindowWidth()}\n              attributionControl={false}\n              scrollWheelZoom={false}\n              zoomDelta={0.5}\n              zoomSnap={0}\n\n              keyboard={false}\n              dragging={setDragging()}\n              // touchZoom={false}\n              doubleClickZoom={false}\n              maxZoom={9}\n            >\n              <HandleMouseHover />\n\n              <ScaleControl />\n\n              {baseLayers.includes(\"Monsoon_Rain\") && (\n                <GeoJSON\n                  data={Monsoon_Rain.features}\n                  style={MonsoonRainStyle}\n                  onEachFeature={onEachFeatureMonsoonRain}\n                />\n              )}\n\n\n              <Pane name=\"indiastates_pane\" style={{ zIndex: -3 }}>\n                <GeoJSON\n                  data={indiastates.features}\n                  style={{\n                    fillColor: \"#84857e\",\n                    fillOpacity: 0.5,\n                    weight: 2,\n                    color: \"whitesmoke\",\n                    interactive: false,\n                  }}\n                />\n              </Pane>\n\n              <LayerControlBtn setBaseLayers={setBaseLayers} baseLayers={baseLayers} layersItems={layersItems} singlebaseLayer={singlebaseLayer} setSingleBaseLayer={setSingleBaseLayer} singleLayerItems={singleLayerItems} />\n\n              <Pane name=\"DroughtProneArea_pane\" style={{ zIndex: -2 }}>\n                {baseLayers.includes(\"DroughtProneArea\") && (\n                  <GeoJSON\n                    data={DroughtProneArea.features}\n                    style={DroughtProneAreaStyle}\n                    onEachFeature={onEachFeatureDistrict}\n\n                  />\n                )}\n              </Pane>\n              {baseLayers.includes(\"AnnualTemperature\") && (\n                <GeoJSON\n                  data={AnnualTemperature.features}\n                  style={AnnualTemperatureStyle}\n                />\n              )}\n\n              {baseLayers.includes(\"Monsoon_Track_Onset_of_monsoon\") && (\n                <GeoJSON\n                  data={Monsoon_Track_Onset_of_monsoon.features}\n                  style={{\n                    weight: 3,\n                    color: \"brown\",\n                    interactive: false,\n                  }}\n                />\n              )}\n              {baseLayers.includes(\"Monsoon_Track_Retreat_of_monsoon\") && (\n                <GeoJSON\n                  data={Monsoon_Track_Retreat_of_monsoon.features}\n                  style={{\n                    weight: 3,\n                    color: \"black\",\n                    interactive: false,\n                  }}\n                />\n              )}\n\n\n\n              {baseLayers.includes(\"Rivers\") && (\n                <GeoJSON\n                  data={Rivers.features}\n                  style={{\n                    fillColor: \"none\",\n                    weight: 2,\n                    color: \"blue\",\n                    interactive: false,\n                  }}\n                />\n              )}\n              {baseLayers.includes(\"indiaBasin\") && (\n                <GeoJSON\n                  data={indiaBasin.features}\n                  style={{\n                    fillColor: \"none\",\n                    weight: 2,\n                    color: \"darkblue\",\n                    interactive: false,\n                  }}\n                />\n              )}\n\n\n\n\n\n\n              <div className=\"coordinate_container\">\n                Lat: {mousePosition.lat.toFixed(4)}, Long:{\" \"}\n                {mousePosition.lng.toFixed(4)}\n              </div>\n              <div className=\"desktop_legend_container\">\n                {baseLayers && <Legend baseLayers={baseLayers} />}\n              </div>\n              <ExportMapButton mapContainerRef={mapContainerRef} mapTitle=\"Natural Disaster: Drought\" />\n            </MapContainer>\n            <div className=\"phone_legend_container\">\n              {baseLayers && <Legend baseLayers={baseLayers} />}\n            </div>\n\n          </div>\n\n\n        </div>\n      </div>\n\n\n    </div>\n  );\n};\n\nexport default DroughtMap;\n","import { DomUtil } from 'leaflet';\nfunction splitClassName(className) {\n    return className.split(' ').filter(Boolean);\n}\nexport function addClassName(element, className) {\n    splitClassName(className).forEach((cls)=>{\n        DomUtil.addClass(element, cls);\n    });\n}\nexport function removeClassName(element, className) {\n    splitClassName(className).forEach((cls)=>{\n        DomUtil.removeClass(element, cls);\n    });\n}\nexport function updateClassName(element, prevClassName, nextClassName) {\n    if (element != null && nextClassName !== prevClassName) {\n        if (prevClassName != null && prevClassName.length > 0) {\n            removeClassName(element, prevClassName);\n        }\n        if (nextClassName != null && nextClassName.length > 0) {\n            addClassName(element, nextClassName);\n        }\n    }\n}\n","import { LeafletProvider, addClassName, useLeafletContext } from '@react-leaflet/core';\nimport React, { forwardRef, useState, useEffect, useImperativeHandle, useMemo } from 'react';\nimport { createPortal } from 'react-dom';\nconst DEFAULT_PANES = [\n    'mapPane',\n    'markerPane',\n    'overlayPane',\n    'popupPane',\n    'shadowPane',\n    'tilePane',\n    'tooltipPane'\n];\nfunction omitPane(obj, pane) {\n    const { [pane]: _p , ...others } = obj;\n    return others;\n}\nfunction createPane(name, props, context) {\n    if (DEFAULT_PANES.indexOf(name) !== -1) {\n        throw new Error(`You must use a unique name for a pane that is not a default Leaflet pane: ${name}`);\n    }\n    if (context.map.getPane(name) != null) {\n        throw new Error(`A pane with this name already exists: ${name}`);\n    }\n    const parentPaneName = props.pane ?? context.pane;\n    const parentPane = parentPaneName ? context.map.getPane(parentPaneName) : undefined;\n    const element = context.map.createPane(name, parentPane);\n    if (props.className != null) {\n        addClassName(element, props.className);\n    }\n    if (props.style != null) {\n        Object.keys(props.style).forEach((key)=>{\n            // @ts-ignore\n            element.style[key] = props.style[key];\n        });\n    }\n    return element;\n}\nfunction PaneComponent(props, forwardedRef) {\n    const [paneName] = useState(props.name);\n    const [paneElement, setPaneElement] = useState(null);\n    useImperativeHandle(forwardedRef, ()=>paneElement, [\n        paneElement\n    ]);\n    const context = useLeafletContext();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const newContext = useMemo(()=>({\n            ...context,\n            pane: paneName\n        }), [\n        context\n    ]);\n    useEffect(()=>{\n        setPaneElement(createPane(paneName, props, context));\n        return function removeCreatedPane() {\n            const pane = context.map.getPane(paneName);\n            pane?.remove?.();\n            // @ts-ignore map internals\n            if (context.map._panes != null) {\n                // @ts-ignore map internals\n                context.map._panes = omitPane(context.map._panes, paneName);\n                // @ts-ignore map internals\n                context.map._paneRenderers = omitPane(// @ts-ignore map internals\n                context.map._paneRenderers, paneName);\n            }\n        };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    return props.children != null && paneElement != null ? /*#__PURE__*/ createPortal(/*#__PURE__*/ React.createElement(LeafletProvider, {\n        value: newContext\n    }, props.children), paneElement) : null;\n}\nexport const Pane = /*#__PURE__*/ forwardRef(PaneComponent);\n"],"names":["Legend","_ref","baseLayers","_jsx","_Fragment","children","length","_jsxs","className","includes","color","label","map","item","style","backgroundColor","_useState","useState","lat","lng","_useState2","_slicedToArray","mousePosition","setMousePosition","mapContainerRef","useRef","HandleMouseHover","useMapEvents","mousemove","e","latlng","_useState3","_useState4","setBaseLayers","_useState5","_useState6","singlebaseLayer","setSingleBaseLayer","Link","to","ref","MapContainer","center","fullscreenControl","zoom","setInitialMapZoom","minZoom","setWindowWidth","attributionControl","scrollWheelZoom","zoomDelta","zoomSnap","keyboard","dragging","setDragging","doubleClickZoom","maxZoom","ScaleControl","GeoJSON","data","Monsoon_Rain","feature","fillColor","density","properties","Annual","weight","opacity","dashArray","fillOpacity","onEachFeature","layer","on","Name","popupContent","concat","Winter","Pre_Monsoo","SW__Monsoo","Post_Monso","bindTooltip","sticky","openTooltip","closeTooltip","Pane","name","zIndex","indiastates","interactive","LayerControlBtn","layersItems","value","singleLayerItems","DroughtProneArea","DROUGHT","District","STATE","AnnualTemperature","ZONE","level","Monsoon_Track_Onset_of_monsoon","Monsoon_Track_Retreat_of_monsoon","Rivers","indiaBasin","toFixed","ExportMapButton","mapTitle","splitClassName","split","filter","Boolean","addClassName","element","forEach","cls","DomUtil","addClass","DEFAULT_PANES","omitPane","obj","pane","_objectWithoutProperties","_toPropertyKey","PaneComponent","props","forwardedRef","paneName","paneElement","setPaneElement","useImperativeHandle","context","useLeafletContext","newContext","useMemo","_objectSpread","useEffect","_props$pane","indexOf","Error","getPane","parentPaneName","parentPane","undefined","createPane","Object","keys","key","_pane$remove","remove","call","_panes","_paneRenderers","createPortal","React","LeafletProvider","forwardRef"],"sourceRoot":""}