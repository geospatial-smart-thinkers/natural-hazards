{"version":3,"file":"static/js/917.0b10fd4a.chunk.js","mappings":"iNAkGA,IA5FwB,SAAHA,GAAuC,IAAjCC,EAAeD,EAAfC,gBAAiBC,EAAQF,EAARE,SACxCC,GAA0CC,EAAAA,EAAAA,KAAlCC,EAAeF,EAAfE,gBAAiBC,EAAYH,EAAZG,aAoFzB,OACIC,EAAAA,EAAAA,KAAA,UAAQC,QApFe,WACvB,IAAMC,EAAeR,EAAgBS,QAC/BC,EAAgBC,OAAOC,WAE7BR,EAAgB,6BAChBC,GAAa,GAGb,IAAMQ,EAAU,CACZC,MAAkC,EAA3BN,EAAaO,YACpBC,OAAoC,EAA5BR,EAAaS,aACrBC,MAAO,CACHC,UAAW,WACXC,gBAAiB,WACjBN,MAAO,OACPE,OAAQ,SAIhBK,IAAAA,OACYb,EAAcK,GACrBS,MAAK,SAACC,GACH,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,UAAY,WACf,IAAMC,EAAM,IAAIC,MAChBD,EAAIE,OAAS,WACT,IAAMC,EAAcH,EAAIb,MAAQa,EAAIX,OAC9Be,EAAiBrB,GAAiB,IAAM,WAAa,YACrDsB,EAAM,IAAIC,EAAAA,GAAMF,EAAgB,KAAM,MAGtCG,EAAQjC,EAERkC,EADgB,GACCH,EAAII,mBAAmBF,GAAyBF,EAAIK,SAASC,YAC9EC,GAAcP,EAAIK,SAASG,SAASC,WAAaN,GAAkB,EAOzE,GAJAH,EAAIU,YALkB,IAMtBV,EAAIW,KAAKJ,EAHU,GAGcL,GAG7BxB,GAAiB,IAAK,CACtB,IAAMkC,EAAYZ,EAAIK,SAASG,SAASK,YAAc,GAChDC,EAAWF,EAAYd,EACvBiB,GAAKf,EAAIK,SAASG,SAASC,WAAaK,GAAY,EACpDE,GAAKhB,EAAIK,SAASG,SAASK,YAAcD,GAAa,EAC5DZ,EAAIiB,SAAStB,EAAK,MAAOoB,EAAGC,EAAGF,EAAUF,EAC7C,KAAO,CACH,IAAME,EAAWd,EAAIK,SAASG,SAASC,WACjCG,EAAYE,EAAWhB,EAEvBkB,GAAKhB,EAAIK,SAASG,SAASK,YAAcD,GAAa,EAC5DZ,EAAIiB,SAAStB,EAAK,MAFR,EAEkBqB,EAAGF,EAAUF,EAC7C,CAGA,IAAMM,EAAc,8DAEdC,EADW,GACCnB,EAAII,mBAAmBc,GAA0BlB,EAAIK,SAASC,YAC1Ec,GAASpB,EAAIK,SAASG,SAASC,WAAaU,GAAa,EACzDE,EAAQrB,EAAIK,SAASG,SAASK,YAAc,GAElDb,EAAIU,YALa,IAMjBV,EAAIW,KAAKS,EAAOC,EAAOH,GAOvBlB,EAAIsB,KAAK,UALU,CACfC,UAAU,EACVC,QAAS,KAIbpD,EAAgB,qCAChBC,GAAa,EACjB,EACAsB,EAAI8B,IAAMjC,EAAOkC,MACrB,EACAlC,EAAOmC,cAAcpC,EACzB,IACCqC,OAAM,SAACC,GACJC,QAAQD,MAAM,6BAA8BA,EAChD,GACR,EAGyCE,UAAU,gBAAeC,UAC1D1D,EAAAA,EAAAA,KAAC2D,EAAAA,IAAa,KAG1B,C,kGChBA,EA7EwB,SAAHlE,GAA2G,IAArGmE,EAAanE,EAAbmE,cAAeC,EAAUpE,EAAVoE,WAAYC,EAAWrE,EAAXqE,YAAaC,EAAkBtE,EAAlBsE,mBAAoBC,EAAevE,EAAfuE,gBAAiBC,EAAgBxE,EAAhBwE,iBAE9FC,EAAwB,SAACC,GAC3B,IAAMC,EAAQD,EAAME,OAAOD,MACvBD,EAAME,OAAOC,QACbV,GAAc,SAACW,GAAU,SAAAC,QAAAC,EAAAA,EAAAA,GAASF,GAAU,CAAEH,GAAQ,IAEtDR,GAAc,SAACW,GAAU,OAAKA,EAAWG,QAAO,SAACC,GAAK,OAAKA,IAAUP,CAAK,GAAC,GAEnF,EAEMQ,EAA8B,SAACT,GACjCJ,EAAmBI,EAAME,OAAOD,MACpC,EAGAS,GAAwDC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhEI,EAAqBF,EAAA,GAAEG,EAAsBH,EAAA,GAcpD,OACII,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAA1B,SAAA,EACI1D,EAAAA,EAAAA,KAAA,OACIyD,UAAU,aACV4B,aAhBiB,WACzBH,GAAuB,EAC3B,EAc+CxB,UAEnC1D,EAAAA,EAAAA,KAAA,OAAKmD,I,yqDAAgBmC,IAAI,aAG7BH,EAAAA,EAAAA,MAAA,OACI1B,UAAS,0BAAAe,OAA4BS,EAAwB,UAAY,IACzEI,aAnBoB,WAC5BH,GAAuB,EAC3B,EAkBYK,aAhBoB,WAC5BL,GAAuB,EAC3B,EAckDxB,SAAA,CAGrCO,EAAiBuB,KAAI,SAACC,GAAI,OACvBzF,EAAAA,EAAAA,KAAA,OAAsByD,UAAU,oBAAmBC,UAC/CyB,EAAAA,EAAAA,MAAA,SAAAzB,SAAA,EACI1D,EAAAA,EAAAA,KAAA,SACI0F,KAAK,QACLtB,MAAOqB,EAAKrB,MACZE,QAASN,IAAoByB,EAAKrB,MAClCuB,SAAUf,KAEd5E,EAAAA,EAAAA,KAAA,QAAA0D,SAAO+B,EAAKG,YARVH,EAAKrB,MAUT,IAGTN,EAAY0B,KAAI,SAACC,GAAI,OAClBzF,EAAAA,EAAAA,KAAA,OAAsByD,UAAU,oBAAmBC,UAC/CyB,EAAAA,EAAAA,MAAA,SAAAzB,SAAA,EACI1D,EAAAA,EAAAA,KAAA,SACI0F,KAAK,WACLtB,MAAOqB,EAAKrB,MACZE,QAAST,EAAWgC,SAASJ,EAAKrB,OAClCuB,SAAUzB,KAEdlE,EAAAA,EAAAA,KAAA,QAAA0D,SAAO+B,EAAKG,YARVH,EAAKrB,MAUT,SAK1B,C,2l00HCrDM0B,EAAS,SAAHrG,GAAyC,IAAnCoE,EAAUpE,EAAVoE,WAAYG,EAAevE,EAAfuE,gBAmC5B,OACEhE,EAAAA,EAAAA,KAAAoF,EAAAA,SAAA,CAAA1B,SACGG,EAAWkC,OAAS,IACnBZ,EAAAA,EAAAA,MAAA,OAAK1B,UAAU,mBAAkBC,SAAA,EAC/B1D,EAAAA,EAAAA,KAAA,MAAA0D,SAAI,YACiB,iBAApBM,IACCmB,EAAAA,EAAAA,MAAA,OAAAzB,SAAA,EACE1D,EAAAA,EAAAA,KAAA,KAAA0D,SAAG,iCAzCY,CACzB,CAAEsC,MAAO,MAAOJ,MAAO,UACvB,CAAEI,MAAO,SAAUJ,MAAO,aAC1B,CAAEI,MAAO,OAAQJ,MAAO,aACxB,CAAEI,MAAO,QAASJ,MAAO,aACzB,CAAEI,MAAO,SAAUJ,MAAO,YAC1B,CAAEI,MAAO,SAAUJ,MAAO,UAoCIJ,KAAI,SAACC,GAAI,OAC3BN,EAAAA,EAAAA,MAAA,OAAsB1B,UAAU,cAAaC,SAAA,EAC3C1D,EAAAA,EAAAA,KAAA,QACEyD,UAAU,qBACV7C,MAAO,CAAEqF,gBAAiBR,EAAKO,UAEjChG,EAAAA,EAAAA,KAAA,QAAMyD,UAAU,eAAcC,SAAE+B,EAAKG,UAL7BH,EAAKO,MAMT,OAIXnC,EAAWgC,SAAS,sCACnB7F,EAAAA,EAAAA,KAAA,OAAA0D,SA7CqC,CAC7C,CAAEsC,MAAO,QAASJ,MAAO,uCA6CyBJ,KAAI,SAACC,GAAI,OAC/CN,EAAAA,EAAAA,MAAA,OAAsB1B,UAAU,cAAaC,SAAA,EAC3C1D,EAAAA,EAAAA,KAAA,QACEyD,UAAU,qBACV7C,MAAO,CAAEqF,gBAAiBR,EAAKO,UAEjChG,EAAAA,EAAAA,KAAA,QAAMyD,UAAU,eAAcC,SAAE+B,EAAKG,UAL7BH,EAAKO,MAMT,MAIXnC,EAAWgC,SAAS,oCACnB7F,EAAAA,EAAAA,KAAA,OAAA0D,SAvDmC,CAC3C,CAAEsC,MAAO,QAASJ,MAAO,qCAuDuBJ,KAAI,SAACC,GAAI,OAC7CN,EAAAA,EAAAA,MAAA,OAAsB1B,UAAU,cAAaC,SAAA,EAC3C1D,EAAAA,EAAAA,KAAA,QACEyD,UAAU,qBACV7C,MAAO,CAAEqF,gBAAiBR,EAAKO,UAEjChG,EAAAA,EAAAA,KAAA,QAAMyD,UAAU,eAAcC,SAAE+B,EAAKG,UAL7BH,EAAKO,MAMT,MAKS,sBAApBhC,IAECmB,EAAAA,EAAAA,MAAA,OAAAzB,SAAA,EACE1D,EAAAA,EAAAA,KAAA,KAAA0D,SAAG,uBAzDiB,CAC9B,CAAEsC,MAAO,UAAWJ,MAAO,YAC3B,CAAEI,MAAO,SAAUJ,MAAO,OAC1B,CAAEI,MAAO,SAAUJ,MAAO,UAC1B,CAAEI,MAAO,MAAOJ,MAAO,QACvB,CAAEI,MAAO,QAASJ,MAAO,cAqDUJ,KAAI,SAACC,GAAI,OAChCN,EAAAA,EAAAA,MAAA,OAAsB1B,UAAU,cAAaC,SAAA,EAC3C1D,EAAAA,EAAAA,KAAA,QACEyD,UAAU,qBACV7C,MAAO,CAAEqF,gBAAiBR,EAAKO,UAEjChG,EAAAA,EAAAA,KAAA,QAAMyD,UAAU,eAAcC,SAAE+B,EAAKG,UAL7BH,EAAKO,MAMT,OAMS,qBAApBhC,IACChE,EAAAA,EAAAA,KAAA,OAAA0D,SAnFqB,CAC7B,CAAEsC,MAAO,SAAUJ,MAAO,uBAmFQJ,KAAI,SAACC,GAAI,OAC/BN,EAAAA,EAAAA,MAAA,OAAsB1B,UAAU,cAAaC,SAAA,EAC3C1D,EAAAA,EAAAA,KAAA,QACEyD,UAAU,qBACV7C,MAAO,CAAEqF,gBAAiBR,EAAKO,UAEjChG,EAAAA,EAAAA,KAAA,QAAMyD,UAAU,eAAcC,SAAE+B,EAAKG,UAL7BH,EAAKO,MAMT,MAIXnC,EAAWgC,SAAS,YACnB7F,EAAAA,EAAAA,KAAA,OAAA0D,SA5FW,CACnB,CAAEsC,MAAO,OAAQJ,MAAO,WA4FAJ,KAAI,SAACC,GAAI,OACrBN,EAAAA,EAAAA,MAAA,OAAsB1B,UAAU,cAAaC,SAAA,EAC3C1D,EAAAA,EAAAA,KAAA,QACEyD,UAAU,qBACV7C,MAAO,CAAEqF,gBAAiBR,EAAKO,UAEjChG,EAAAA,EAAAA,KAAA,QAAMyD,UAAU,eAAcC,SAAE+B,EAAKG,UAL7BH,EAAKO,MAMT,MAIXnC,EAAWgC,SAAS,gBACnB7F,EAAAA,EAAAA,KAAA,OAAA0D,SArGe,CACvB,CAAEsC,MAAO,WAAYJ,MAAO,gBAqGAJ,KAAI,SAACC,GAAI,OACzBN,EAAAA,EAAAA,MAAA,OAAsB1B,UAAU,cAAaC,SAAA,EAC3C1D,EAAAA,EAAAA,KAAA,QACEyD,UAAU,qBACV7C,MAAO,CAAEqF,gBAAiBR,EAAKO,UAEjChG,EAAAA,EAAAA,KAAA,QAAMyD,UAAU,eAAcC,SAAE+B,EAAKG,UAL7BH,EAAKO,MAMT,UAQtB,EAyVA,EArVmB,WACjB,IAAAnB,GAA0CC,EAAAA,EAAAA,UAAS,CAAEoB,IAAK,EAAGC,IAAK,IAAIpB,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/DuB,EAAarB,EAAA,GAAEsB,EAAgBtB,EAAA,GAChCrF,GAAkB4G,EAAAA,EAAAA,QAAO,MACzBC,EAAmB,WAOvB,OANAC,EAAAA,EAAAA,IAAa,CACXC,UAAW,SAACC,GACVL,EAAiBK,EAAEC,OACrB,IAGK,IACT,EAwJA,IAAAC,GAAoC9B,EAAAA,EAAAA,UAAS,CAAC,WAAU+B,GAAA7B,EAAAA,EAAAA,GAAA4B,EAAA,GAAjD/C,EAAUgD,EAAA,GAAEjD,EAAaiD,EAAA,GAahCC,GAA8ChC,EAAAA,EAAAA,UAAS,oBAAmBiC,GAAA/B,EAAAA,EAAAA,GAAA8B,EAAA,GAAnE9C,EAAe+C,EAAA,GAAEhD,EAAkBgD,EAAA,GAS1C,OACE/G,EAAAA,EAAAA,KAAA,OAAKyD,UAAU,sBAAqBC,UAClCyB,EAAAA,EAAAA,MAAA,OAAK1B,UAAU,MAAKC,SAAA,EAClB1D,EAAAA,EAAAA,KAAA,OAAKyD,UAAU,qBAAoBC,UACjCyB,EAAAA,EAAAA,MAAA,OAAK1B,UAAU,iBAAgBC,SAAA,EAC7B1D,EAAAA,EAAAA,KAAA,MAAA0D,SAAI,sBACJyB,EAAAA,EAAAA,MAAA,KAAAzB,SAAA,CAAG,2XACsX1D,EAAAA,EAAAA,KAAA,SAAM,4KAK/XmF,EAAAA,EAAAA,MAAC6B,EAAAA,GAAI,CAACC,GAAG,2BAA0BvD,SAAA,CAAC,KAAC1D,EAAAA,EAAAA,KAAA,UAAQyD,UAAU,iBAAgBC,SAAC,kBACxEyB,EAAAA,EAAAA,MAAC6B,EAAAA,GAAI,CAACC,GAAG,gBAAevD,SAAA,CAAC,KAAC1D,EAAAA,EAAAA,KAAA,UAAQyD,UAAU,iBAAgBC,SAAC,kBAMjE1D,EAAAA,EAAAA,KAAA,OAAKyD,UAAU,qBAAoBC,UACjCyB,EAAAA,EAAAA,MAAA,OAAK1B,UAAU,gBAAgByD,IAAKxH,EAAgBgE,SAAA,EAClDyB,EAAAA,EAAAA,MAACgC,EAAAA,EAAY,CACXC,OAAQ,CAAC,GAAI,IACbC,mBAAmB,EACnBC,MAAMC,EAAAA,EAAAA,MACNC,SAASD,EAAAA,EAAAA,MACT3G,OAAO6G,EAAAA,EAAAA,MACPC,oBAAoB,EACpBC,iBAAiB,EACjBC,UAAW,GACXC,SAAU,EAEVC,UAAU,EACVC,UAAUC,EAAAA,EAAAA,MAEVC,iBAAiB,EACjBC,QAAS,EAAExE,SAAA,EAEX1D,EAAAA,EAAAA,KAACuG,EAAgB,KAEjBvG,EAAAA,EAAAA,KAACmI,EAAAA,EAAY,KAGbnI,EAAAA,EAAAA,KAACoI,EAAAA,EAAe,CAACxE,cAAeA,EAAeC,WAAYA,EAAYC,YA/D/D,CAElB,CAAEM,MAAO,SAAUwB,MAAO,UAC1B,CAAExB,MAAO,aAAcwB,MAAO,wBAC9B,CAAExB,MAAO,iCAAkCwB,MAAO,oCAClD,CAAExB,MAAO,mCAAoCwB,MAAO,uCA0DuD5B,gBAAiBA,EAAiBD,mBAAoBA,EAAoBE,iBAnD9J,CACvB,CAAEG,MAAO,mBAAoBwB,MAAO,sBACpC,CAAExB,MAAO,eAAgBwB,MAAO,gBAChC,CAAExB,MAAO,oBAAqBwB,MAAO,0BAmD3B5F,EAAAA,EAAAA,KAACqI,EAAAA,EAAI,CAACC,KAAK,wBAAwB1H,MAAO,CAAE2H,QAAS,GAAI7E,SAClC,qBAApBM,IACChE,EAAAA,EAAAA,KAACwI,EAAAA,EAAO,CACNC,KAAMC,EAAAA,EACN9H,MA9NY,SAAC+H,GAC7B,MAAmC,QAA/BA,EAAQC,WAAWC,QACb,CACNC,UAAW,SACXC,OAAQ,EACRC,QAAS,EACThD,MAAO,QACPiD,UAAW,IACXC,YAAa,IAGP,CACNJ,UAAW,QACXC,OAAQ,EACRC,QAAS,EACThD,MAAO,QACPiD,UAAW,IACXC,YAAa,GAKnB,EAyMkBC,cA9FlB,SAA+BR,EAAShE,GACtCA,EAAMyE,GAAG,aAAa,SAAU1C,GAC9B,GAAIiC,EAAQC,YAAcD,EAAQC,WAAWS,SAAU,CACrD,IAAMC,EAAY,oCAAA9E,OAENmE,EAAQC,WAAWS,SAAQ,0BAAA7E,OAC9BmE,EAAQC,WAAWW,MAAK,wBAGjC5E,EAAM6E,YAAYF,EAAc,CAAEG,QAAQ,GAC5C,CACA9E,EAAM+E,aACR,IAEA/E,EAAMyE,GAAG,YAAY,WACnBzE,EAAMgF,cACR,GACF,OAmFY3J,EAAAA,EAAAA,KAACqI,EAAAA,EAAI,CAACC,KAAK,oBAAoB1H,MAAO,CAAE2H,QAAS,GAAI7E,SAC9B,iBAApBM,IACChE,EAAAA,EAAAA,KAACwI,EAAAA,EAAO,CACNC,KAAMmB,EAAAA,EACNhJ,MApJQ,SAAA+H,GACxB,MAAQ,CACNG,WAfwBe,EAeMlB,EAAQC,WAAWkB,OAd5CD,EAAU,KACb,MACAA,EAAU,IACR,SACAA,EAAU,KACR,OACAA,EAAU,IACR,QACAA,EAAU,IACR,SACA,UAKVd,OAAQ,EACRC,QAAS,EACThD,MAAO,QACPiD,UAAW,IACXC,YAAa,IApBW,IAAAW,CAsB5B,EA4IkBV,cAzLlB,SAAkCR,EAAShE,GACzCA,EAAMyE,GAAG,aAAa,SAAU1C,GAC9B,GAAIiC,EAAQC,YAAcD,EAAQC,WAAWmB,KAAM,CACjD,IAAMT,EAAY,iCAAA9E,OAETmE,EAAQC,WAAWmB,KAAI,2BAAAvF,OACtBmE,EAAQC,WAAWoB,OAAM,+BAAAxF,OACrBmE,EAAQC,WAAWqB,WAAU,+BAAAzF,OAC7BmE,EAAQC,WAAWsB,WAAU,+BAAA1F,OAC7BmE,EAAQC,WAAWuB,WAAU,2BAAA3F,OACjCmE,EAAQC,WAAWkB,OAAM,6BAGnCnF,EAAM6E,YAAYF,EAAc,CAAEG,QAAQ,GAC5C,CACA9E,EAAM+E,aACR,IAEA/E,EAAMyE,GAAG,YAAY,WACnBzE,EAAMgF,cACR,GACF,OAyKY3J,EAAAA,EAAAA,KAACqI,EAAAA,EAAI,CAACC,KAAK,yBAAyB1H,MAAO,CAAE2H,QAAS,GAAI7E,SACnC,sBAApBM,IACChE,EAAAA,EAAAA,KAACwI,EAAAA,EAAO,CACNC,KAAM2B,EAAAA,EACNxJ,MApIa,SAAC+H,GAC9B,MAAO,CACLG,WAf8BuB,EAeM1B,EAAQC,WAAW0B,MAdzC,aAATD,EACH,UACS,QAATA,EACE,SACS,WAATA,EACE,SACS,SAATA,EACE,MACS,cAATA,EACE,QACA,SAKVtB,OAAQ,EACRC,QAAS,EACThD,MAAO,QACPiD,UAAW,IACXC,YAAa,IApBgB,IAACmB,CAsBlC,EA4HkBlB,cAzNlB,SAAwCR,EAAShE,GAC/CA,EAAMyE,GAAG,aAAa,SAAU1C,GAC9B,GAAIiC,EAAQC,WAAY,CACtB,IAAMU,EAAY,iCAAA9E,OAETmE,EAAQC,WAAW0B,MAAK,0BAAA9F,OACxBmE,EAAQC,WAAW2B,MAAK,6BAGjC5F,EAAM6E,YAAYF,EAAc,CAAEG,QAAQ,GAC5C,CACA9E,EAAM+E,aACR,IAEA/E,EAAMyE,GAAG,YAAY,WACnBzE,EAAMgF,cACR,GACF,MAiNa9F,EAAWgC,SAAS,oCACnB7F,EAAAA,EAAAA,KAACwI,EAAAA,EAAO,CACNC,KAAM+B,EAAAA,GACN5J,MAAO,CACLmI,OAAQ,EACR/C,MAAO,QACPyE,aAAa,KAIlB5G,EAAWgC,SAAS,sCACnB7F,EAAAA,EAAAA,KAACwI,EAAAA,EAAO,CACNC,KAAMiC,EAAAA,GACN9J,MAAO,CACLmI,OAAQ,EACR/C,MAAO,QACPyE,aAAa,KAOlB5G,EAAWgC,SAAS,YACnB7F,EAAAA,EAAAA,KAACwI,EAAAA,EAAO,CACNC,KAAMkC,EAAAA,EACN/J,MAAO,CACLkI,UAAW,OACXC,OAAQ,EACR/C,MAAO,OACPyE,aAAa,KAIlB5G,EAAWgC,SAAS,gBACnB7F,EAAAA,EAAAA,KAACwI,EAAAA,EAAO,CACNC,KAAMmC,EAAAA,GACNhK,MAAO,CACLkI,UAAW,OACXC,OAAQ,EACR/C,MAAO,WACPyE,aAAa,MAUnBtF,EAAAA,EAAAA,MAAA,OAAK1B,UAAU,uBAAsBC,SAAA,CAAC,QAC9B0C,EAAcF,IAAI2E,QAAQ,GAAG,UAAQ,IAC1CzE,EAAcD,IAAI0E,QAAQ,OAE7B7K,EAAAA,EAAAA,KAAA,OAAKyD,UAAU,2BAA0BC,SACtCG,IAAc7D,EAAAA,EAAAA,KAAC8F,EAAM,CAACjC,WAAYA,EAAYG,gBAAiBA,OAElEhE,EAAAA,EAAAA,KAAC8K,EAAAA,EAAe,CAACpL,gBAAiBA,EAAiBC,SAAS,kCAE9DK,EAAAA,EAAAA,KAAA,OAAKyD,UAAU,yBAAwBC,SACpCG,IAAc7D,EAAAA,EAAAA,KAAC8F,EAAM,CAACjC,WAAYA,EAAYG,gBAAiBA,eAY9E,C,wGC5fO,IAAMyD,EAAe,WAQxB,OAPoBpH,OAAOC,YAEN,CAAC,KACJ,CAAEE,MAAO,OAAQE,OAAQ,QAASuF,gBAAiB,QAAS8E,OAAQ,OAAQC,OAAQ,OAAQC,aAAc,OAE1G,CAAEzK,MAAO,OAAQE,OAAQ,QAASuF,gBAAiB,QAAS8E,OAAQ,OAAQC,OAAQ,OAAQC,aAAc,OAGhI,EAGa1D,EAAkB,WAC3B,IACI2D,EADA9K,EAAgBC,OAAOC,WAS3B,OAPIF,GAAiB,CAAC,OACpB8K,EAAU,CAAC,OACP9K,GAAiB,CAAC,OACtB8K,EAAU,CAAC,MACP9K,GAAiB,CAAC,QACtB8K,EAAU,CAAC,MAENA,CACT,EAEalD,EAAY,WACvB,IACID,EADA3H,EAAgBC,OAAOC,WAO3B,OALIF,GAAiB,CAAC,OACpB2H,GAAW,GACP3H,GAAiB,CAAC,OACtB2H,GAAW,GAENA,CACT,C,6GClCF,SAASoD,EAAe1H,GACpB,OAAOA,EAAU2H,MAAM,KAAK1G,OAAO2G,QACvC,CACO,SAASC,EAAaC,EAAS9H,GAClC0H,EAAe1H,GAAW+H,SAAQ,SAACC,GAC/BC,EAAAA,QAAQC,SAASJ,EAASE,EAC9B,GACJ,C,iCCLMG,EAAgB,CAClB,UACA,aACA,cACA,YACA,aACA,WACA,eAEJ,SAASC,EAASC,EAAKC,GACgBD,EAA1BC,GACT,OAD8BC,EAAAA,EAAAA,GAAKF,EAAG,CAA7BC,GAAIvG,IAAAyG,EAAAA,GAEjB,CAsBA,SAASC,EAAcC,EAAOC,GAC1B,IAAAvH,GAAmBC,EAAAA,EAAAA,UAASqH,EAAM7D,MAA3B+D,GAAgCrH,EAAAA,EAAAA,GAAAH,EAAA,GAAxB,GACf+B,GAAsC9B,EAAAA,EAAAA,UAAS,MAAK+B,GAAA7B,EAAAA,EAAAA,GAAA4B,EAAA,GAA7C0F,EAAWzF,EAAA,GAAE0F,EAAc1F,EAAA,IAClC2F,EAAAA,EAAAA,qBAAoBJ,GAAc,kBAAIE,CAAW,GAAE,CAC/CA,IAEJ,IAAMG,GAAUC,EAAAA,EAAAA,MAEVC,GAAaC,EAAAA,EAAAA,UAAQ,kBAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAD,EAChBJ,GAAO,IACVV,KAAMM,GAAQ,GACd,CACJI,IAkBJ,OAhBAK,EAAAA,EAAAA,YAAU,WAEN,OADAP,EApCR,SAAoBjE,EAAM6D,EAAOM,GAAS,IAAAM,EACtC,IAAqC,IAAjCnB,EAAcoB,QAAQ1E,GACtB,MAAM,IAAI2E,MAAM,6EAADzI,OAA8E8D,IAEjG,GAAiC,MAA7BmE,EAAQjH,IAAI0H,QAAQ5E,GACpB,MAAM,IAAI2E,MAAM,yCAADzI,OAA0C8D,IAE7D,IAAM6E,EAA2B,QAAbJ,EAAGZ,EAAMJ,YAAI,IAAAgB,EAAAA,EAAIN,EAAQV,KACvCqB,EAAaD,EAAiBV,EAAQjH,IAAI0H,QAAQC,QAAkBE,EACpE9B,EAAUkB,EAAQjH,IAAI8H,WAAWhF,EAAM8E,GAU7C,OATuB,MAAnBjB,EAAM1I,WACN6H,EAAaC,EAASY,EAAM1I,WAEb,MAAf0I,EAAMvL,OACN2M,OAAOC,KAAKrB,EAAMvL,OAAO4K,SAAQ,SAACiC,GAE9BlC,EAAQ3K,MAAM6M,GAAOtB,EAAMvL,MAAM6M,EACrC,IAEGlC,CACX,CAgBuB+B,CAAWjB,EAAUF,EAAOM,IACpC,WAA6B,IAAAiB,EAC1B3B,EAAOU,EAAQjH,IAAI0H,QAAQb,GAC7B,OAAJN,QAAI,IAAJA,GAAY,QAAR2B,EAAJ3B,EAAM4B,cAAM,IAAAD,GAAZA,EAAAE,KAAA7B,GAE0B,MAAtBU,EAAQjH,IAAIqI,SAEZpB,EAAQjH,IAAIqI,OAAShC,EAASY,EAAQjH,IAAIqI,OAAQxB,GAElDI,EAAQjH,IAAIsI,eAAiBjC,EAC7BY,EAAQjH,IAAIsI,eAAgBzB,GAEpC,CAEJ,GAAG,IACsB,MAAlBF,EAAMzI,UAAmC,MAAf4I,GAAoCyB,EAAAA,EAAAA,cAA2BC,EAAAA,cAAoBC,EAAAA,GAAiB,CACjI7J,MAAOuI,GACRR,EAAMzI,UAAW4I,GAAe,IACvC,CACO,IAAMjE,GAAqB6F,EAAAA,EAAAA,YAAWhC,E","sources":["components/ExportMapButton.jsx","components/LayerControlBtn.jsx","maps/DroughtMap.jsx","utilities/Functions.jsx","../node_modules/@react-leaflet/core/lib/dom.js","../node_modules/react-leaflet/lib/Pane.js"],"sourcesContent":["import React from 'react'\nimport jsPDF from 'jspdf';\nimport domtoimage from 'dom-to-image';\nimport { AiFillPrinter } from 'react-icons/ai';\nimport { useAlertContext } from '../context/AlertContext';\n\nconst ExportMapButton = ({ mapContainerRef, mapTitle }) => {\n    const { setAlertMessage, setShowAlert } = useAlertContext();\n    const handleExportMapPDF = () => {\n        const mapContainer = mapContainerRef.current;\n        const viewportWidth = window.innerWidth;\n\n        setAlertMessage('Your download is starting')\n        setShowAlert(true)\n\n\n        const options = {\n            width: mapContainer.offsetWidth * 2,\n            height: mapContainer.offsetHeight * 2,\n            style: {\n                transform: 'scale(2)',\n                transformOrigin: 'top left',\n                width: '100%',\n                height: 'auto',\n            },\n        };\n\n        domtoimage\n            .toBlob(mapContainer, options)\n            .then((blob) => {\n                const reader = new FileReader();\n                reader.onloadend = () => {\n                    const img = new Image();\n                    img.onload = () => {\n                        const aspectRatio = img.width / img.height;\n                        const pdfOrientation = viewportWidth <= 767 ? 'portrait' : 'landscape';\n                        const pdf = new jsPDF(pdfOrientation, 'px', 'a4');\n\n                        // Add title at the top\n                        const title = mapTitle;\n                        const titleFontSize = 16;\n                        const titleTextWidth = pdf.getStringUnitWidth(title) * titleFontSize / pdf.internal.scaleFactor;\n                        const titleTextX = (pdf.internal.pageSize.getWidth() - titleTextWidth) / 2;\n                        const titleTextY = 20; // Y-coordinate for the title\n\n                        pdf.setFontSize(titleFontSize);\n                        pdf.text(titleTextX, titleTextY, title);\n\n\n                        if (viewportWidth <= 767) {\n                            const pdfHeight = pdf.internal.pageSize.getHeight() - 50; // Set the desired height for PDF if viewport width <= 767\n                            const pdfWidth = pdfHeight * aspectRatio;\n                            const x = (pdf.internal.pageSize.getWidth() - pdfWidth) / 2;\n                            const y = (pdf.internal.pageSize.getHeight() - pdfHeight) / 2;\n                            pdf.addImage(img, 'PNG', x, y, pdfWidth, pdfHeight);\n                        } else {\n                            const pdfWidth = pdf.internal.pageSize.getWidth(); // Use A4 width for PDF if viewport width > 767\n                            const pdfHeight = pdfWidth / aspectRatio;\n                            const x = 0;\n                            const y = (pdf.internal.pageSize.getHeight() - pdfHeight) / 2;\n                            pdf.addImage(img, 'PNG', x, y, pdfWidth, pdfHeight);\n                        }\n\n                        // Add text line at the bottom\n                        const websiteName = 'This map has been downloaded from GEOSPATIAL SMART THINKERS';\n                        const fontSize = 10;\n                        const textWidth = pdf.getStringUnitWidth(websiteName) * fontSize / pdf.internal.scaleFactor;\n                        const textX = (pdf.internal.pageSize.getWidth() - textWidth) / 2; // X-coordinate for center alignment\n                        const textY = pdf.internal.pageSize.getHeight() - 10; // Y-coordinate for the text\n\n                        pdf.setFontSize(fontSize);\n                        pdf.text(textX, textY, websiteName);\n\n                        const pdfOptions = {\n                            compress: true, // Enable compression\n                            quality: 0.4, // Adjust the quality (0.0 - 1.0, default is 0.9)\n                        };\n\n                        pdf.save('map.pdf', pdfOptions);\n                        setAlertMessage('Map exported as PDF successfully!')\n                        setShowAlert(true)\n                    };\n                    img.src = reader.result;\n                };\n                reader.readAsDataURL(blob);\n            })\n            .catch((error) => {\n                console.error('Error exporting map image:', error);\n            });\n    };\n\n    return (\n        <button onClick={handleExportMapPDF} className=\"print_map_btn\">\n            <AiFillPrinter />\n        </button>\n    )\n}\n\nexport default ExportMapButton","import React, { useState } from 'react';\nimport layerIcon from \"../assets/layer-control.png\";\n\nconst LayerControlBtn = ({ setBaseLayers, baseLayers, layersItems, setSingleBaseLayer, singlebaseLayer, singleLayerItems }) => {\n\n    const handleBaseLayerChange = (event) => {\n        const value = event.target.value;\n        if (event.target.checked) {\n            setBaseLayers((prevLayers) => [...prevLayers, value]);\n        } else {\n            setBaseLayers((prevLayers) => prevLayers.filter((layer) => layer !== value));\n        }\n    };\n\n    const handleSingleBaseLayerChange = (event) => {\n        setSingleBaseLayer(event.target.value);\n    };\n\n\n    const [isLayerControlVisible, setLayerControlVisible] = useState(false);\n\n    const handleLayerIconHover = () => {\n        setLayerControlVisible(true);\n    };\n\n    const handleLayerControlHover = () => {\n        setLayerControlVisible(true);\n    };\n\n    const handleLayerControlLeave = () => {\n        setLayerControlVisible(false);\n    };\n\n    return (\n        <>\n            <div\n                className=\"layer_icon\"\n                onMouseEnter={handleLayerIconHover}\n            >\n                <img src={layerIcon} alt=\"Layer\" />\n            </div>\n\n            <div\n                className={`layercontrol_container ${isLayerControlVisible ? \"visible\" : \"\"}`}\n                onMouseEnter={handleLayerControlHover}\n                onMouseLeave={handleLayerControlLeave}\n            >\n\n                {singleLayerItems.map((item) => (\n                    <div key={item.value} className=\"layercontrol_item\">\n                        <label>\n                            <input\n                                type=\"radio\"\n                                value={item.value}\n                                checked={singlebaseLayer === item.value}\n                                onChange={handleSingleBaseLayerChange}\n                            />\n                            <span>{item.label}</span>\n                        </label>\n                    </div>\n                ))}\n\n                {layersItems.map((item) => (\n                    <div key={item.value} className=\"layercontrol_item\">\n                        <label>\n                            <input\n                                type=\"checkbox\"\n                                value={item.value}\n                                checked={baseLayers.includes(item.value)}\n                                onChange={handleBaseLayerChange}\n                            />\n                            <span>{item.label}</span>\n                        </label>\n                    </div>\n                ))}\n            </div>\n        </>\n    );\n};\n\nexport default LayerControlBtn;\n","import React, { useRef, useState } from \"react\";\nimport indiaBasin from '../data/indiaBasin.json';\nimport AnnualTemperature from '../data/Annual_Temperature.json';\nimport Rivers from '../data/Rivers.json';\nimport Monsoon_Rain from \"../data/Monsoon_Rain.json\"\nimport Monsoon_Track_Onset_of_monsoon from \"../data/Monsoon_Track_Onset_of_monsoon.json\"\nimport Monsoon_Track_Retreat_of_monsoon from \"../data/Monsoon_Track_Retreat_of_monsoon.json\"\nimport DroughtProneArea from '../data/DroughtProneArea.json';\nimport { setWindowWidth } from \"../utilities/Functions\";\nimport { setInitialMapZoom } from \"../utilities/Functions\";\nimport { setDragging } from \"../utilities/Functions\";\nimport {\n  MapContainer,\n  useMapEvents,\n  GeoJSON,\n  ScaleControl, Pane\n} from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport 'leaflet-fullscreen/dist/Leaflet.fullscreen.js';\nimport 'leaflet-fullscreen/dist/leaflet.fullscreen.css';\nimport ExportMapButton from \"../components/ExportMapButton\";\nimport LayerControlBtn from \"../components/LayerControlBtn\";\nimport { Link } from \"react-router-dom\";\n\n\nconst Legend = ({ baseLayers, singlebaseLayer }) => {\n  const Monsoon_RainLegend = [\n    { color: \"red\", label: \"> 2500\" },\n    { color: \"purple\", label: \"2000-2500\" },\n    { color: \"blue\", label: \"1500-2000\" },\n    { color: \"green\", label: \"1000-1500\" },\n    { color: \"orange\", label: \"500-1000\" },\n    { color: \"yellow\", label: \"< 500\" },\n\n  ];\n  const Monsoon_Track_Retreat_of_monsoonLegend = [\n    { color: \"brown\", label: \"Monsoon Track (Retreat of monsoon)\" },\n  ];\n  const Monsoon_Track_Onset_of_monsoonLegend = [\n    { color: \"black\", label: \"Monsoon Track (Onset of monsoon)\" },\n  ];\n  const DroughtProneAreaLegend = [\n    { color: \"orange\", label: \"Drought Prone Area\" },\n  ];\n\n  const RiversLegend = [\n    { color: \"blue\", label: \"Rivers\" },\n  ];\n\n  const indiaBasinLegend = [\n    { color: \"darkblue\", label: \"India Basin\" },\n  ];\n  const AnnualTemperatureLegend = [\n    { color: \"skyblue\", label: \"Very Low\" },\n    { color: \"yellow\", label: \"Low\" },\n    { color: \"orange\", label: \"Medium\" },\n    { color: \"red\", label: \"High\" },\n    { color: \"brown\", label: \"Very High\" },\n  ];\n\n  return (\n    <>\n      {baseLayers.length > 0 && (\n        <div className=\"legend_container\">\n          <h5>Legends</h5>\n          {singlebaseLayer === \"Monsoon_Rain\" && (\n            <div>\n              <p>Monsoon Annual Rainfall (mm)</p>\n              {Monsoon_RainLegend.map((item) => (\n                <div key={item.color} className=\"legend_item\">\n                  <span\n                    className=\"legend_item_square\"\n                    style={{ backgroundColor: item.color }}\n                  />\n                  <span className=\"legend-label\">{item.label}</span>\n                </div>\n              ))}\n            </div>\n          )}\n          {baseLayers.includes(\"Monsoon_Track_Retreat_of_monsoon\") && (\n            <div>\n              {Monsoon_Track_Retreat_of_monsoonLegend.map((item) => (\n                <div key={item.color} className=\"legend_item\">\n                  <span\n                    className=\"legend_item_square\"\n                    style={{ backgroundColor: item.color }}\n                  />\n                  <span className=\"legend-label\">{item.label}</span>\n                </div>\n              ))}\n            </div>\n          )}\n          {baseLayers.includes(\"Monsoon_Track_Onset_of_monsoon\") && (\n            <div>\n              {Monsoon_Track_Onset_of_monsoonLegend.map((item) => (\n                <div key={item.color} className=\"legend_item\">\n                  <span\n                    className=\"legend_item_square\"\n                    style={{ backgroundColor: item.color }}\n                  />\n                  <span className=\"legend-label\">{item.label}</span>\n                </div>\n              ))}\n            </div>\n          )}\n\n          {singlebaseLayer === \"AnnualTemperature\" && (\n\n            <div>\n              <p>Annual Temperature</p>\n              {AnnualTemperatureLegend.map((item) => (\n                <div key={item.color} className=\"legend_item\">\n                  <span\n                    className=\"legend_item_square\"\n                    style={{ backgroundColor: item.color }}\n                  />\n                  <span className=\"legend-label\">{item.label}</span>\n                </div>\n              ))}\n            </div>\n          )}\n\n\n          {singlebaseLayer === \"DroughtProneArea\" && (\n            <div>\n              {DroughtProneAreaLegend.map((item) => (\n                <div key={item.color} className=\"legend_item\">\n                  <span\n                    className=\"legend_item_square\"\n                    style={{ backgroundColor: item.color }}\n                  />\n                  <span className=\"legend-label\">{item.label}</span>\n                </div>\n              ))}\n            </div>\n          )}\n          {baseLayers.includes(\"Rivers\") && (\n            <div>\n              {RiversLegend.map((item) => (\n                <div key={item.color} className=\"legend_item\">\n                  <span\n                    className=\"legend_item_square\"\n                    style={{ backgroundColor: item.color }}\n                  />\n                  <span className=\"legend-label\">{item.label}</span>\n                </div>\n              ))}\n            </div>\n          )}\n          {baseLayers.includes(\"indiaBasin\") && (\n            <div>\n              {indiaBasinLegend.map((item) => (\n                <div key={item.color} className=\"legend_item\">\n                  <span\n                    className=\"legend_item_square\"\n                    style={{ backgroundColor: item.color }}\n                  />\n                  <span className=\"legend-label\">{item.label}</span>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      )}\n    </>\n  );\n};\n\n\n\nconst DroughtMap = () => {\n  const [mousePosition, setMousePosition] = useState({ lat: 0, lng: 0 });\n  const mapContainerRef = useRef(null);\n  const HandleMouseHover = () => {\n    useMapEvents({\n      mousemove: (e) => {\n        setMousePosition(e.latlng);\n      },\n    });\n\n    return null;\n  };\n\n  const DroughtProneAreaStyle = (feature) => {\n    if (feature.properties.DROUGHT === \"YES\") {\n      return ({\n        fillColor: 'orange',\n        weight: 1,\n        opacity: 1,\n        color: 'black',\n        dashArray: '2',\n        fillOpacity: 0.8\n      })\n    } else {\n      return ({\n        fillColor: 'white',\n        weight: 1,\n        opacity: 1,\n        color: 'black',\n        dashArray: '2',\n        fillOpacity: 0.8\n      })\n\n    }\n\n  }\n\n\n\n  \n  function onEachFeatureAnnualTemperature(feature, layer) {\n    layer.on(\"mouseover\", function (e) {\n      if (feature.properties) {\n        const popupContent = `\n      <div>\n        Level: ${feature.properties.level}<br/>\n        Range: ${feature.properties.range}<br/>\n      </div>\n    `;\n        layer.bindTooltip(popupContent, { sticky: true });\n      }\n      layer.openTooltip();\n    });\n\n    layer.on(\"mouseout\", function () {\n      layer.closeTooltip();\n    });\n  }\n\n\n\n\n  function onEachFeatureMonsoonRain(feature, layer) {\n    layer.on(\"mouseover\", function (e) {\n      if (feature.properties && feature.properties.Name) {\n        const popupContent = `\n      <div>\n        STATE: ${feature.properties.Name}<br/>\n        Winter: ${feature.properties.Winter}<br/>\n        Pre_Monsoo: ${feature.properties.Pre_Monsoo}<br/>\n        SW__Monsoo: ${feature.properties.SW__Monsoo}<br/>\n        Post_Monso: ${feature.properties.Post_Monso}<br/>\n        Annual: ${feature.properties.Annual}<br/>\n      </div>\n    `;\n        layer.bindTooltip(popupContent, { sticky: true });\n      }\n      layer.openTooltip();\n    });\n\n    layer.on(\"mouseout\", function () {\n      layer.closeTooltip();\n    });\n  }\n\n  const MonsoonRainDensity = (density => {\n    return density > 2500\n      ? 'red'\n      : density > 2000\n        ? 'purple'\n        : density > 1500\n          ? 'blue'\n          : density > 1000\n            ? 'green'\n            : density > 500\n              ? 'orange'\n              : 'yellow';\n  })\n  const MonsoonRainStyle = (feature => {\n    return ({\n      fillColor: MonsoonRainDensity(feature.properties.Annual),\n      weight: 1,\n      opacity: 1,\n      color: 'black',\n      dashArray: '2',\n      fillOpacity: 0.8\n    });\n  });\n\n\n\n  const AnnualTemperatureDensity = (ZONE) => {\n    return ZONE === \"Very Low\"\n      ? \"skyblue\"\n      : ZONE === \"Low\"\n        ? \"yellow\"\n        : ZONE === \"Medium\"\n          ? \"orange\"\n          : ZONE === \"High\"\n            ? \"red\"\n            : ZONE === \"Very High\"\n              ? \"brown\"\n              : \"black\";\n  };\n  const AnnualTemperatureStyle = (feature) => {\n    return {\n      fillColor: AnnualTemperatureDensity(feature.properties.level),\n      weight: 1,\n      opacity: 1,\n      color: \"black\",\n      dashArray: '2',\n      fillOpacity: 0.8,\n    };\n  };\n\n\n\n\n\n\n\n\n  function onEachFeatureDistrict(feature, layer) {\n    layer.on('mouseover', function (e) {\n      if (feature.properties && feature.properties.District) {\n        const popupContent = `\n      <div>\n        District: ${feature.properties.District}<br/>\n        STATE: ${feature.properties.STATE}\n      </div>\n    `;\n        layer.bindTooltip(popupContent, { sticky: true });\n      }\n      layer.openTooltip();\n    });\n\n    layer.on('mouseout', function () {\n      layer.closeTooltip();\n    });\n  }\n\n\n\n  const [baseLayers, setBaseLayers] = useState([\"Rivers\"]);\n\n  const layersItems = [\n\n    { value: \"Rivers\", label: \"Rivers\" },\n    { value: \"indiaBasin\", label: \"River Basin Boundary\" },\n    { value: \"Monsoon_Track_Onset_of_monsoon\", label: \"Monsoon Track (Onset of monsoon)\" },\n    { value: \"Monsoon_Track_Retreat_of_monsoon\", label: \"Monsoon Track (Retreat of monsoon)\" },\n\n\n\n  ];\n\n  const [singlebaseLayer, setSingleBaseLayer] = useState(\"DroughtProneArea\");\n  const singleLayerItems = [\n    { value: \"DroughtProneArea\", label: \"Drought Prone Area\" },\n    { value: \"Monsoon_Rain\", label: \"Monsoon Rain\" },\n    { value: \"AnnualTemperature\", label: \"Annual Temperature\" },\n\n  ];\n\n\n  return (\n    <div className=\"main_page_container\">\n      <div className=\"row\">\n        <div className=\"col-lg-3 col-md-12\">\n          <div className=\"info_container\">\n            <h3>What is Drought?</h3>\n            <p>\n              Drought is a natural phenomenon characterized by an extended period of water scarcity in an area. It results from inadequate rainfall, excessive evaporation, and over utilization of water from various sources such as reservoirs and groundwater. Droughts can have a devastating impact on people, animals, and the environment. They can also lead to social unrest and conflict. <br />\n\n              The length of a drought can vary greatly. Some droughts may only last a few weeks, while others can persist for years. The most severe droughts can last for decades.\n            </p>\n\n            <Link to=\"/drought/drought-details\"> <button className=\"general_button\">Read More</button></Link>\n            <Link to=\"/drought/quiz\"> <button className=\"general_button\">Quiz</button></Link>\n\n          </div>\n\n        </div>\n\n        <div className=\"col-lg-9 col-md-12\">\n          <div className=\"map_container\" ref={mapContainerRef}>\n            <MapContainer\n              center={[22, 84]}\n              fullscreenControl={true}\n              zoom={setInitialMapZoom()}\n              minZoom={setInitialMapZoom()}\n              style={setWindowWidth()}\n              attributionControl={false}\n              scrollWheelZoom={false}\n              zoomDelta={0.5}\n              zoomSnap={0}\n\n              keyboard={false}\n              dragging={setDragging()}\n              // touchZoom={false}\n              doubleClickZoom={false}\n              maxZoom={9}\n            >\n              <HandleMouseHover />\n\n              <ScaleControl />\n\n\n              <LayerControlBtn setBaseLayers={setBaseLayers} baseLayers={baseLayers} layersItems={layersItems} singlebaseLayer={singlebaseLayer} setSingleBaseLayer={setSingleBaseLayer} singleLayerItems={singleLayerItems} />\n\n\n              <Pane name=\"DroughtProneArea_pane\" style={{ zIndex: -2 }}>\n                {singlebaseLayer === \"DroughtProneArea\" && (\n                  <GeoJSON\n                    data={DroughtProneArea.features}\n                    style={DroughtProneAreaStyle}\n                    onEachFeature={onEachFeatureDistrict}\n\n                  />\n                )}\n              </Pane>\n\n              <Pane name=\"Monsoon_Rain_pane\" style={{ zIndex: -2 }}>\n                {singlebaseLayer === \"Monsoon_Rain\" && (\n                  <GeoJSON\n                    data={Monsoon_Rain.features}\n                    style={MonsoonRainStyle}\n                    onEachFeature={onEachFeatureMonsoonRain}\n                  />\n                )}\n              </Pane>\n\n              <Pane name=\"AnnualTemperature_pane\" style={{ zIndex: -2 }}>\n                {singlebaseLayer === \"AnnualTemperature\" && (\n                  <GeoJSON\n                    data={AnnualTemperature.features}\n                    style={AnnualTemperatureStyle}\n                    onEachFeature={onEachFeatureAnnualTemperature}\n                  />\n                )}\n              </Pane>\n\n\n\n\n\n              {baseLayers.includes(\"Monsoon_Track_Onset_of_monsoon\") && (\n                <GeoJSON\n                  data={Monsoon_Track_Onset_of_monsoon.features}\n                  style={{\n                    weight: 3,\n                    color: \"brown\",\n                    interactive: false,\n                  }}\n                />\n              )}\n              {baseLayers.includes(\"Monsoon_Track_Retreat_of_monsoon\") && (\n                <GeoJSON\n                  data={Monsoon_Track_Retreat_of_monsoon.features}\n                  style={{\n                    weight: 3,\n                    color: \"black\",\n                    interactive: false,\n                  }}\n                />\n              )}\n\n\n\n              {baseLayers.includes(\"Rivers\") && (\n                <GeoJSON\n                  data={Rivers.features}\n                  style={{\n                    fillColor: \"none\",\n                    weight: 2,\n                    color: \"blue\",\n                    interactive: false,\n                  }}\n                />\n              )}\n              {baseLayers.includes(\"indiaBasin\") && (\n                <GeoJSON\n                  data={indiaBasin.features}\n                  style={{\n                    fillColor: \"none\",\n                    weight: 2,\n                    color: \"darkblue\",\n                    interactive: false,\n                  }}\n                />\n              )}\n\n\n\n\n\n\n              <div className=\"coordinate_container\">\n                Lat: {mousePosition.lat.toFixed(4)}, Long:{\" \"}\n                {mousePosition.lng.toFixed(4)}\n              </div>\n              <div className=\"desktop_legend_container\">\n                {baseLayers && <Legend baseLayers={baseLayers} singlebaseLayer={singlebaseLayer} />}\n              </div>\n              <ExportMapButton mapContainerRef={mapContainerRef} mapTitle=\"Natural Disaster: Drought\" />\n            </MapContainer>\n            <div className=\"phone_legend_container\">\n              {baseLayers && <Legend baseLayers={baseLayers} singlebaseLayer={singlebaseLayer} />}\n            </div>\n\n          </div>\n\n\n        </div>\n      </div>\n\n\n    </div>\n  );\n};\n\nexport default DroughtMap;\n","\nexport const setWindowWidth=()=> {\n    var viewportWidth = window.innerWidth;\n    var windowWidth;\n    if (viewportWidth <= [767]) {\n        windowWidth = { width: '100%', height: \"600px\", backgroundColor: 'white', border: 'none', margin: 'auto', borderRadius: \"0px\", };\n    } else {\n        windowWidth = { width: '100%', height: \"600px\", backgroundColor: 'white', border: 'none', margin: 'auto', borderRadius: \"10px\", };\n    }\n    return windowWidth;\n}\n\n\nexport const setInitialMapZoom=()=> {\n    var viewportWidth = window.innerWidth;\n    var mapZoom;\n    if (viewportWidth <= [767]) {\n      mapZoom = [3.75];\n    } if (viewportWidth >= [768]) {\n      mapZoom = [4.5];\n    } if (viewportWidth >= [1600]) {\n      mapZoom = [4.5];\n    }\n    return mapZoom;\n  }\n\n  export const setDragging=()=> {\n    var viewportWidth = window.innerWidth;\n    var dragging;\n    if (viewportWidth <= [767]) {\n      dragging = false;\n    } if (viewportWidth >= [768]) {\n      dragging = true;\n    } \n    return dragging;\n  }","import { DomUtil } from 'leaflet';\nfunction splitClassName(className) {\n    return className.split(' ').filter(Boolean);\n}\nexport function addClassName(element, className) {\n    splitClassName(className).forEach((cls)=>{\n        DomUtil.addClass(element, cls);\n    });\n}\nexport function removeClassName(element, className) {\n    splitClassName(className).forEach((cls)=>{\n        DomUtil.removeClass(element, cls);\n    });\n}\nexport function updateClassName(element, prevClassName, nextClassName) {\n    if (element != null && nextClassName !== prevClassName) {\n        if (prevClassName != null && prevClassName.length > 0) {\n            removeClassName(element, prevClassName);\n        }\n        if (nextClassName != null && nextClassName.length > 0) {\n            addClassName(element, nextClassName);\n        }\n    }\n}\n","import { LeafletProvider, addClassName, useLeafletContext } from '@react-leaflet/core';\nimport React, { forwardRef, useState, useEffect, useImperativeHandle, useMemo } from 'react';\nimport { createPortal } from 'react-dom';\nconst DEFAULT_PANES = [\n    'mapPane',\n    'markerPane',\n    'overlayPane',\n    'popupPane',\n    'shadowPane',\n    'tilePane',\n    'tooltipPane'\n];\nfunction omitPane(obj, pane) {\n    const { [pane]: _p , ...others } = obj;\n    return others;\n}\nfunction createPane(name, props, context) {\n    if (DEFAULT_PANES.indexOf(name) !== -1) {\n        throw new Error(`You must use a unique name for a pane that is not a default Leaflet pane: ${name}`);\n    }\n    if (context.map.getPane(name) != null) {\n        throw new Error(`A pane with this name already exists: ${name}`);\n    }\n    const parentPaneName = props.pane ?? context.pane;\n    const parentPane = parentPaneName ? context.map.getPane(parentPaneName) : undefined;\n    const element = context.map.createPane(name, parentPane);\n    if (props.className != null) {\n        addClassName(element, props.className);\n    }\n    if (props.style != null) {\n        Object.keys(props.style).forEach((key)=>{\n            // @ts-ignore\n            element.style[key] = props.style[key];\n        });\n    }\n    return element;\n}\nfunction PaneComponent(props, forwardedRef) {\n    const [paneName] = useState(props.name);\n    const [paneElement, setPaneElement] = useState(null);\n    useImperativeHandle(forwardedRef, ()=>paneElement, [\n        paneElement\n    ]);\n    const context = useLeafletContext();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const newContext = useMemo(()=>({\n            ...context,\n            pane: paneName\n        }), [\n        context\n    ]);\n    useEffect(()=>{\n        setPaneElement(createPane(paneName, props, context));\n        return function removeCreatedPane() {\n            const pane = context.map.getPane(paneName);\n            pane?.remove?.();\n            // @ts-ignore map internals\n            if (context.map._panes != null) {\n                // @ts-ignore map internals\n                context.map._panes = omitPane(context.map._panes, paneName);\n                // @ts-ignore map internals\n                context.map._paneRenderers = omitPane(// @ts-ignore map internals\n                context.map._paneRenderers, paneName);\n            }\n        };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    return props.children != null && paneElement != null ? /*#__PURE__*/ createPortal(/*#__PURE__*/ React.createElement(LeafletProvider, {\n        value: newContext\n    }, props.children), paneElement) : null;\n}\nexport const Pane = /*#__PURE__*/ forwardRef(PaneComponent);\n"],"names":["_ref","mapContainerRef","mapTitle","_useAlertContext","useAlertContext","setAlertMessage","setShowAlert","_jsx","onClick","mapContainer","current","viewportWidth","window","innerWidth","options","width","offsetWidth","height","offsetHeight","style","transform","transformOrigin","domtoimage","then","blob","reader","FileReader","onloadend","img","Image","onload","aspectRatio","pdfOrientation","pdf","jsPDF","title","titleTextWidth","getStringUnitWidth","internal","scaleFactor","titleTextX","pageSize","getWidth","setFontSize","text","pdfHeight","getHeight","pdfWidth","x","y","addImage","websiteName","textWidth","textX","textY","save","compress","quality","src","result","readAsDataURL","catch","error","console","className","children","AiFillPrinter","setBaseLayers","baseLayers","layersItems","setSingleBaseLayer","singlebaseLayer","singleLayerItems","handleBaseLayerChange","event","value","target","checked","prevLayers","concat","_toConsumableArray","filter","layer","handleSingleBaseLayerChange","_useState","useState","_useState2","_slicedToArray","isLayerControlVisible","setLayerControlVisible","_jsxs","_Fragment","onMouseEnter","alt","onMouseLeave","map","item","type","onChange","label","includes","Legend","length","color","backgroundColor","lat","lng","mousePosition","setMousePosition","useRef","HandleMouseHover","useMapEvents","mousemove","e","latlng","_useState3","_useState4","_useState5","_useState6","Link","to","ref","MapContainer","center","fullscreenControl","zoom","setInitialMapZoom","minZoom","setWindowWidth","attributionControl","scrollWheelZoom","zoomDelta","zoomSnap","keyboard","dragging","setDragging","doubleClickZoom","maxZoom","ScaleControl","LayerControlBtn","Pane","name","zIndex","GeoJSON","data","DroughtProneArea","feature","properties","DROUGHT","fillColor","weight","opacity","dashArray","fillOpacity","onEachFeature","on","District","popupContent","STATE","bindTooltip","sticky","openTooltip","closeTooltip","Monsoon_Rain","density","Annual","Name","Winter","Pre_Monsoo","SW__Monsoo","Post_Monso","AnnualTemperature","ZONE","level","range","Monsoon_Track_Onset_of_monsoon","interactive","Monsoon_Track_Retreat_of_monsoon","Rivers","indiaBasin","toFixed","ExportMapButton","border","margin","borderRadius","mapZoom","splitClassName","split","Boolean","addClassName","element","forEach","cls","DomUtil","addClass","DEFAULT_PANES","omitPane","obj","pane","_objectWithoutProperties","_toPropertyKey","PaneComponent","props","forwardedRef","paneName","paneElement","setPaneElement","useImperativeHandle","context","useLeafletContext","newContext","useMemo","_objectSpread","useEffect","_props$pane","indexOf","Error","getPane","parentPaneName","parentPane","undefined","createPane","Object","keys","key","_pane$remove","remove","call","_panes","_paneRenderers","createPortal","React","LeafletProvider","forwardRef"],"sourceRoot":""}