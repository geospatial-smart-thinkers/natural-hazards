{"version":3,"file":"static/js/807.5fbfd532.chunk.js","mappings":"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","sources":["maps/DroughtMap.jsx","../node_modules/@react-leaflet/core/lib/dom.js","../node_modules/react-leaflet/lib/Pane.js"],"sourcesContent":["import React, { useRef, useState } from \"react\";\nimport indiastates from '../data/indiaStates.json';\nimport indiaBasin from '../data/indiaBasin.json';\nimport Rivers from '../data/Rivers.json';\nimport DroughtProneArea from '../data/DroughtProneArea.json';\nimport { setWindowWidth } from \"../utilities/Functions\";\nimport { setInitialMapZoom } from \"../utilities/Functions\";\nimport { setDragging } from \"../utilities/Functions\";\nimport {\n  MapContainer,\n  useMapEvents,\n  GeoJSON,\n  ScaleControl, Pane\n} from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport 'leaflet-fullscreen/dist/Leaflet.fullscreen.js';\nimport 'leaflet-fullscreen/dist/leaflet.fullscreen.css';\nimport ExportMapButton from \"../components/ExportMapButton\";\nimport LayerControlBtn from \"../components/LayerControlBtn\";\nimport { Link } from \"react-router-dom\";\n\n\nconst Legend = ({ baseLayers }) => {\n  const DroughtProneAreaLegend = [\n    { color: \"orange\", label: \"Drought Prone Area\" },\n  ];\n\n  const RiversLegend = [\n    { color: \"blue\", label: \"Rivers\" },\n  ];\n\n  const indiaBasinLegend = [\n    { color: \"darkblue\", label: \"India Basin\" },\n  ];\n\n  return (\n    <>\n      {baseLayers.length > 0 && (\n        <div className=\"legend_container\">\n          <h5>Legends</h5>\n          {baseLayers.includes(\"DroughtProneArea\") && (\n            <div>\n              {DroughtProneAreaLegend.map((item) => (\n                <div key={item.color} className=\"legend_item\">\n                  <span\n                    className=\"legend_item_square\"\n                    style={{ backgroundColor: item.color }}\n                  />\n                  <span className=\"legend-label\">{item.label}</span>\n                </div>\n              ))}\n            </div>\n          )}\n          {baseLayers.includes(\"Rivers\") && (\n            <div>\n              {RiversLegend.map((item) => (\n                <div key={item.color} className=\"legend_item\">\n                  <span\n                    className=\"legend_item_square\"\n                    style={{ backgroundColor: item.color }}\n                  />\n                  <span className=\"legend-label\">{item.label}</span>\n                </div>\n              ))}\n            </div>\n          )}\n          {baseLayers.includes(\"indiaBasin\") && (\n            <div>\n              {indiaBasinLegend.map((item) => (\n                <div key={item.color} className=\"legend_item\">\n                  <span\n                    className=\"legend_item_square\"\n                    style={{ backgroundColor: item.color }}\n                  />\n                  <span className=\"legend-label\">{item.label}</span>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      )}\n    </>\n  );\n};\n\n\n\nconst DroughtMap = () => {\n  const [mousePosition, setMousePosition] = useState({ lat: 0, lng: 0 });\n  const mapContainerRef = useRef(null);\n  const HandleMouseHover = () => {\n    useMapEvents({\n      mousemove: (e) => {\n        setMousePosition(e.latlng);\n      },\n    });\n\n    return null;\n  };\n\n  const DroughtProneAreaStyle = (feature) => {\n    if (feature.properties.DROUGHT === \"YES\") {\n      return ({\n        fillColor: 'orange',\n        weight: 1,\n        opacity: 1,\n        color: 'black',\n        dashArray: '2',\n        fillOpacity: 0.7\n      })\n    } else {\n      return ({\n        fillColor: 'white',\n        weight: 1,\n        opacity: 1,\n        color: 'black',\n        dashArray: '2',\n        fillOpacity: 0.9\n      })\n\n    }\n\n  }\n  \n\n\n\n  function onEachFeatureDistrict(feature, layer) {\n    layer.on('mouseover', function (e) {\n      if (feature.properties && feature.properties.District) {\n        const popupContent = `\n      <div>\n        District: ${feature.properties.District}<br/>\n        STATE: ${feature.properties.STATE}\n      </div>\n    `;\n        layer.bindTooltip(popupContent, { sticky: true });\n      }\n      layer.openTooltip();\n    });\n\n    layer.on('mouseout', function () {\n      layer.closeTooltip();\n    });\n  }\n\n\n\n  const [baseLayers, setBaseLayers] = useState([\"DroughtProneArea\", \"Rivers\"]);\n\n  const layersItems = [\n    { value: \"DroughtProneArea\", label: \"Drought Prone Area\" },\n    { value: \"Rivers\", label: \"Rivers\" },\n    { value: \"indiaBasin\", label: \"River Basin Boundary\" },\n  ];\n\n  const [singlebaseLayer, setSingleBaseLayer] = useState(\"\");\n  const singleLayerItems = [\n\n\n\n  ];\n\n\n  return (\n    <div className=\"main_page_container\">\n      <div className=\"row\">\n        <div className=\"col-md-3\">\n          <div className=\"info_container\">\n            <h3>What is Drought?</h3>\n            <p>\n              Drought is a natural phenomenon characterized by an extended period of water scarcity in an area. It results from inadequate rainfall, excessive evaporation, and over utilization of water from various sources such as reservoirs and groundwater. Droughts can have a devastating impact on people, animals, and the environment. They can also lead to social unrest and conflict. <br/>\n\n              The length of a drought can vary greatly. Some droughts may only last a few weeks, while others can persist for years. The most severe droughts can last for decades.\n            </p>\n\n            <Link to=\"/drought/drought-details\"> <button className=\"general_button\">Read More</button></Link>\n            <Link to=\"/quiz\"> <button className=\"general_button\">Quiz</button></Link>\n\n          </div>\n\n        </div>\n\n        <div className=\"col-md-9\">\n          <div className=\"map_container\" ref={mapContainerRef}>\n            <MapContainer\n              center={[22, 84]}\n              fullscreenControl={true}\n              zoom={setInitialMapZoom()}\n              minZoom={setInitialMapZoom()}\n              style={setWindowWidth()}\n              attributionControl={false}\n              scrollWheelZoom={false}\n              zoomDelta={0.5}\n              zoomSnap={0}\n\n              keyboard={false}\n              dragging={setDragging()}\n              // touchZoom={false}\n              doubleClickZoom={false}\n              maxZoom={9}\n            >\n              <HandleMouseHover />\n\n              <ScaleControl />\n\n              <Pane name=\"indiastates_pane\" style={{ zIndex: -3 }}>\n                <GeoJSON\n                  data={indiastates.features}\n                  style={{\n                    fillColor: \"#84857e\",\n                    fillOpacity: 0.5,\n                    weight: 2,\n                    color: \"whitesmoke\",\n                    interactive: false,\n                  }}\n                />\n              </Pane>\n\n              <LayerControlBtn setBaseLayers={setBaseLayers} baseLayers={baseLayers} layersItems={layersItems} singlebaseLayer={singlebaseLayer} setSingleBaseLayer={setSingleBaseLayer} singleLayerItems={singleLayerItems} />\n\n              <Pane name=\"DroughtProneArea_pane\" style={{ zIndex: -2 }}>\n                {baseLayers.includes(\"DroughtProneArea\") && (\n                  <GeoJSON\n                    data={DroughtProneArea.features}\n                    style={DroughtProneAreaStyle}\n                    onEachFeature={onEachFeatureDistrict}\n\n                  />\n                )}\n              </Pane>\n\n              {baseLayers.includes(\"Rivers\") && (\n                <GeoJSON\n                  data={Rivers.features}\n                  style={{\n                    fillColor: \"none\",\n                    weight: 2,\n                    color: \"blue\",\n                    interactive: false,\n                  }}\n                />\n              )}\n              {baseLayers.includes(\"indiaBasin\") && (\n                <GeoJSON\n                  data={indiaBasin.features}\n                  style={{\n                    fillColor: \"none\",\n                    weight: 2,\n                    color: \"darkblue\",\n                    interactive: false,\n                  }}\n                />\n              )}\n\n\n\n              <div className=\"coordinate_container\">\n                Lat: {mousePosition.lat.toFixed(4)}, Long:{\" \"}\n                {mousePosition.lng.toFixed(4)}\n              </div>\n              <div className=\"desktop_legend_container\">\n                {baseLayers && <Legend baseLayers={baseLayers} />}\n              </div>\n              <ExportMapButton mapContainerRef={mapContainerRef} mapTitle=\"Natural Disaster: Drought\"/>\n            </MapContainer>\n            <div className=\"phone_legend_container\">\n              {baseLayers && <Legend baseLayers={baseLayers} />}\n            </div>\n\n          </div>\n\n\n        </div>\n      </div>\n\n\n    </div>\n  );\n};\n\nexport default DroughtMap;\n","import { DomUtil } from 'leaflet';\nfunction splitClassName(className) {\n    return className.split(' ').filter(Boolean);\n}\nexport function addClassName(element, className) {\n    splitClassName(className).forEach((cls)=>{\n        DomUtil.addClass(element, cls);\n    });\n}\nexport function removeClassName(element, className) {\n    splitClassName(className).forEach((cls)=>{\n        DomUtil.removeClass(element, cls);\n    });\n}\nexport function updateClassName(element, prevClassName, nextClassName) {\n    if (element != null && nextClassName !== prevClassName) {\n        if (prevClassName != null && prevClassName.length > 0) {\n            removeClassName(element, prevClassName);\n        }\n        if (nextClassName != null && nextClassName.length > 0) {\n            addClassName(element, nextClassName);\n        }\n    }\n}\n","import { LeafletProvider, addClassName, useLeafletContext } from '@react-leaflet/core';\nimport React, { forwardRef, useState, useEffect, useImperativeHandle, useMemo } from 'react';\nimport { createPortal } from 'react-dom';\nconst DEFAULT_PANES = [\n    'mapPane',\n    'markerPane',\n    'overlayPane',\n    'popupPane',\n    'shadowPane',\n    'tilePane',\n    'tooltipPane'\n];\nfunction omitPane(obj, pane) {\n    const { [pane]: _p , ...others } = obj;\n    return others;\n}\nfunction createPane(name, props, context) {\n    if (DEFAULT_PANES.indexOf(name) !== -1) {\n        throw new Error(`You must use a unique name for a pane that is not a default Leaflet pane: ${name}`);\n    }\n    if (context.map.getPane(name) != null) {\n        throw new Error(`A pane with this name already exists: ${name}`);\n    }\n    const parentPaneName = props.pane ?? context.pane;\n    const parentPane = parentPaneName ? context.map.getPane(parentPaneName) : undefined;\n    const element = context.map.createPane(name, parentPane);\n    if (props.className != null) {\n        addClassName(element, props.className);\n    }\n    if (props.style != null) {\n        Object.keys(props.style).forEach((key)=>{\n            // @ts-ignore\n            element.style[key] = props.style[key];\n        });\n    }\n    return element;\n}\nfunction PaneComponent(props, forwardedRef) {\n    const [paneName] = useState(props.name);\n    const [paneElement, setPaneElement] = useState(null);\n    useImperativeHandle(forwardedRef, ()=>paneElement, [\n        paneElement\n    ]);\n    const context = useLeafletContext();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const newContext = useMemo(()=>({\n            ...context,\n            pane: paneName\n        }), [\n        context\n    ]);\n    useEffect(()=>{\n        setPaneElement(createPane(paneName, props, context));\n        return function removeCreatedPane() {\n            const pane = context.map.getPane(paneName);\n            pane?.remove?.();\n            // @ts-ignore map internals\n            if (context.map._panes != null) {\n                // @ts-ignore map internals\n                context.map._panes = omitPane(context.map._panes, paneName);\n                // @ts-ignore map internals\n                context.map._paneRenderers = omitPane(// @ts-ignore map internals\n                context.map._paneRenderers, paneName);\n            }\n        };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    return props.children != null && paneElement != null ? /*#__PURE__*/ createPortal(/*#__PURE__*/ React.createElement(LeafletProvider, {\n        value: newContext\n    }, props.children), paneElement) : null;\n}\nexport const Pane = /*#__PURE__*/ forwardRef(PaneComponent);\n"],"names":["Legend","_ref","baseLayers","_jsx","_Fragment","children","length","_jsxs","className","includes","color","label","map","item","style","backgroundColor","_useState","useState","lat","lng","_useState2","_slicedToArray","mousePosition","setMousePosition","mapContainerRef","useRef","HandleMouseHover","useMapEvents","mousemove","e","latlng","_useState3","_useState4","setBaseLayers","_useState5","_useState6","singlebaseLayer","setSingleBaseLayer","Link","to","ref","MapContainer","center","fullscreenControl","zoom","setInitialMapZoom","minZoom","setWindowWidth","attributionControl","scrollWheelZoom","zoomDelta","zoomSnap","keyboard","dragging","setDragging","doubleClickZoom","maxZoom","ScaleControl","Pane","name","zIndex","GeoJSON","data","indiastates","fillColor","fillOpacity","weight","interactive","LayerControlBtn","layersItems","value","singleLayerItems","DroughtProneArea","feature","properties","DROUGHT","opacity","dashArray","onEachFeature","layer","on","District","popupContent","concat","STATE","bindTooltip","sticky","openTooltip","closeTooltip","Rivers","indiaBasin","toFixed","ExportMapButton","mapTitle","splitClassName","split","filter","Boolean","addClassName","element","forEach","cls","DomUtil","addClass","DEFAULT_PANES","omitPane","obj","pane","_objectWithoutProperties","_toPropertyKey","PaneComponent","props","forwardedRef","paneName","paneElement","setPaneElement","useImperativeHandle","context","useLeafletContext","newContext","useMemo","_objectSpread","useEffect","_props$pane","indexOf","Error","getPane","parentPaneName","parentPane","undefined","createPane","Object","keys","key","_pane$remove","remove","call","_panes","_paneRenderers","createPortal","React","LeafletProvider","forwardRef"],"sourceRoot":""}