{"version":3,"file":"static/js/899.30179163.chunk.js","mappings":"6QAoBMA,EAAS,SAAHC,GAAwB,IAAlBC,EAAUD,EAAVC,WAUd,OACIC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACKH,EAAWI,OAAS,IACjBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBH,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,YACHH,EAAWO,SAAS,YACjBN,EAAAA,EAAAA,KAAA,OAAAE,SAdC,CACjB,CAAEK,MAAO,OAAQC,MAAO,WAcUC,KAAI,SAACC,GAAI,OACnBN,EAAAA,EAAAA,MAAA,OAAsBC,UAAU,cAAaH,SAAA,EACzCF,EAAAA,EAAAA,KAAA,QACIK,UAAU,qBACVM,MAAO,CAAEC,gBAAiBF,EAAKH,UAEnCP,EAAAA,EAAAA,KAAA,QAAMK,UAAU,eAAcH,SAAEQ,EAAKF,UAL/BE,EAAKH,MAMT,MAIjBR,EAAWO,SAAS,gBACjBN,EAAAA,EAAAA,KAAA,OAAAE,SAvBK,CACrB,CAAEK,MAAO,WAAYC,MAAO,gBAuBUC,KAAI,SAACC,GAAI,OACvBN,EAAAA,EAAAA,MAAA,OAAsBC,UAAU,cAAaH,SAAA,EACzCF,EAAAA,EAAAA,KAAA,QACIK,UAAU,qBACVM,MAAO,CAAEC,gBAAiBF,EAAKH,UAEnCP,EAAAA,EAAAA,KAAA,QAAMK,UAAU,eAAcH,SAAEQ,EAAKF,UAL/BE,EAAKH,MAMT,UAQtC,EAkIA,UA/HoB,WAChB,IAAAM,GAA0CC,EAAAA,EAAAA,UAAS,CAAEC,IAAK,EAAGC,IAAK,IAAIC,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAA/DM,EAAaF,EAAA,GAAEG,EAAgBH,EAAA,GAChCI,GAAkBC,EAAAA,EAAAA,QAAO,MAEzBC,EAAmB,WAOrB,OANAC,EAAAA,EAAAA,IAAa,CACTC,UAAW,SAACC,GACRN,EAAiBM,EAAEC,OACvB,IAGG,IACX,EAEAC,GAAoCd,EAAAA,EAAAA,UAAS,CAAC,mBAAoB,WAAUe,GAAAX,EAAAA,EAAAA,GAAAU,EAAA,GAArE7B,EAAU8B,EAAA,GAAEC,EAAaD,EAAA,GAOhCE,GAA8CjB,EAAAA,EAAAA,UAAS,IAAGkB,GAAAd,EAAAA,EAAAA,GAAAa,EAAA,GAAnDE,EAAeD,EAAA,GAAEE,EAAkBF,EAAA,GAQ1C,OACIhC,EAAAA,EAAAA,KAAA,OAAKK,UAAU,sBAAqBH,UAChCE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKH,SAAA,EAChBF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,WAAUH,UACrBE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBH,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,cACJF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,0qBAQXF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,WAAUH,UACrBE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAgB8B,IAAKd,EAAgBnB,SAAA,EAChDE,EAAAA,EAAAA,MAACgC,EAAAA,EAAY,CACTC,OAAQ,CAAC,GAAI,IACbC,mBAAmB,EACnBC,MAAMC,EAAAA,EAAAA,MACN7B,OAAO8B,EAAAA,EAAAA,MACPC,oBAAoB,EACpBC,iBAAiB,EACjBC,UAAW,IACXC,SAAU,EACVC,QAAS,EACTC,UAAU,EACVC,UAAUC,EAAAA,EAAAA,MAEVC,iBAAiB,EACjBC,QAAS,EAAEjD,SAAA,EAEXF,EAAAA,EAAAA,KAACuB,EAAgB,KACjBvB,EAAAA,EAAAA,KAACoD,EAAAA,EAAY,KACbpD,EAAAA,EAAAA,KAACqD,EAAAA,EAAO,CACJC,KAAMC,EAAAA,EACN5C,MAAO,CACH6C,UAAW,UACXC,YAAa,GACbC,OAAQ,EACRnD,MAAO,aACPoD,aAAa,MAGrB3D,EAAAA,EAAAA,KAAC4D,EAAAA,EAAe,CAAC9B,cAAeA,EAAe/B,WAAYA,EAAY8D,YAzD3E,CAChB,CAAEC,MAAO,SAAUtD,MAAO,UAC1B,CAAEsD,MAAO,aAActD,MAAO,yBAuDuFyB,gBAAiBA,EAAiBC,mBAAoBA,EAAoB6B,iBAnD1K,KAoDAhE,EAAWO,SAAS,YACjBN,EAAAA,EAAAA,KAACqD,EAAAA,EAAO,CACJC,KAAMU,EAAAA,EACNrD,MAAO,CACH6C,UAAW,OACXE,OAAQ,EACRnD,MAAO,OACPoD,aAAa,KAIxB5D,EAAWO,SAAS,gBACjBN,EAAAA,EAAAA,KAACqD,EAAAA,EAAO,CACJC,KAAMW,EAAAA,GACNtD,MAAO,CACH6C,UAAW,OACXE,OAAQ,EACRnD,MAAO,WACPoD,aAAa,MAMzBvD,EAAAA,EAAAA,MAAA,OACIO,MAAO,CACHuD,SAAU,WACVC,OAAQ,GACRC,MAAO,GACPxD,gBAAiB,QACjByD,QAAS,GACXnE,SAAA,CACL,QACSiB,EAAcJ,IAAIuD,QAAQ,GAAG,UAAQ,IAC1CnD,EAAcH,IAAIsD,QAAQ,OAE/BtE,EAAAA,EAAAA,KAAA,OAAKK,UAAU,2BAA0BH,SACpCH,IAAcC,EAAAA,EAAAA,KAACH,EAAM,CAACE,WAAYA,OAEvCC,EAAAA,EAAAA,KAACuE,EAAAA,EAAe,CAAClD,gBAAiBA,EAAiBmD,SAAS,mCAEhExE,EAAAA,EAAAA,KAAA,OAAKK,UAAU,yBAAwBH,SAClCH,IAAcC,EAAAA,EAAAA,KAACH,EAAM,CAACE,WAAYA,eAS/D,C","sources":["maps/LightingMap.jsx"],"sourcesContent":["import React, { useRef, useState } from \"react\";\nimport indiastates from '../data/indiaStates.json';\nimport { setWindowWidth } from \"../utilities/Functions\";\nimport { setInitialMapZoom } from \"../utilities/Functions\";\nimport { setDragging } from \"../utilities/Functions\";\nimport {\n    MapContainer,\n    useMapEvents,\n    GeoJSON,\n    ScaleControl\n} from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport 'leaflet-fullscreen/dist/Leaflet.fullscreen.js';\nimport 'leaflet-fullscreen/dist/leaflet.fullscreen.css';\nimport ExportMapButton from \"../components/ExportMapButton\";\nimport LayerControlBtn from \"../components/LayerControlBtn\";\nimport indiaBasin from '../data/indiaBasin.json';\nimport Rivers from '../data/Rivers.json';\n\n\nconst Legend = ({ baseLayers }) => {\n\n    const RiversLegend = [\n        { color: \"blue\", label: \"Rivers\" },\n    ];\n\n    const indiaBasinLegend = [\n        { color: \"darkblue\", label: \"India Basin\" },\n    ];\n\n    return (\n        <>\n            {baseLayers.length > 0 && (\n                <div className=\"legend_container\">\n                    <h5>Legends</h5>\n                    {baseLayers.includes(\"Rivers\") && (\n                        <div>\n                            {RiversLegend.map((item) => (\n                                <div key={item.color} className=\"legend_item\">\n                                    <span\n                                        className=\"legend_item_square\"\n                                        style={{ backgroundColor: item.color }}\n                                    />\n                                    <span className=\"legend-label\">{item.label}</span>\n                                </div>\n                            ))}\n                        </div>\n                    )}\n                    {baseLayers.includes(\"indiaBasin\") && (\n                        <div>\n                            {indiaBasinLegend.map((item) => (\n                                <div key={item.color} className=\"legend_item\">\n                                    <span\n                                        className=\"legend_item_square\"\n                                        style={{ backgroundColor: item.color }}\n                                    />\n                                    <span className=\"legend-label\">{item.label}</span>\n                                </div>\n                            ))}\n                        </div>\n                    )}\n                </div>\n            )}\n        </>\n    );\n};\n\n\nconst LightingMap = () => {\n    const [mousePosition, setMousePosition] = useState({ lat: 0, lng: 0 });\n    const mapContainerRef = useRef(null);\n\n    const HandleMouseHover = () => {\n        useMapEvents({\n            mousemove: (e) => {\n                setMousePosition(e.latlng);\n            },\n        });\n\n        return null;\n    };\n\n    const [baseLayers, setBaseLayers] = useState([\"DroughtProneArea\", \"Rivers\"]);\n\n    const layersItems = [\n        { value: \"Rivers\", label: \"Rivers\" },\n        { value: \"indiaBasin\", label: \"River Basin Boundary\" },\n    ];\n\n    const [singlebaseLayer, setSingleBaseLayer] = useState(\"\");\n    const singleLayerItems = [\n\n\n\n    ];\n\n\n    return (\n        <div className=\"main_page_container\">\n            <div className=\"row\">\n                <div className=\"col-md-3\">\n                    <div className=\"info_container\">\n                        <h3>Lighting</h3>\n                        <p>\n                            India experiences a significant number of lightning strikes, particularly during the monsoon season. Lightning occurs due to the discharge of atmospheric electricity between charged particles. These strikes can be dangerous, causing injuries and fatalities, as well as damage to structures and electrical infrastructure. Recognizing the risks associated with lightning, the Indian Meteorological Department has developed a Lightning Early Warning System (LEWS) to alert people about potential lightning activity in their area. Public awareness campaigns and safety guidelines are also promoted to minimize the impact of lightning and protect individuals from its hazards.\n                        </p>\n\n                    </div>\n\n                </div>\n\n                <div className=\"col-md-9\">\n                    <div className=\"map_container\" ref={mapContainerRef}>\n                        <MapContainer\n                            center={[22, 84]}\n                            fullscreenControl={true}\n                            zoom={setInitialMapZoom()}\n                            style={setWindowWidth()}\n                            attributionControl={false}\n                            scrollWheelZoom={false}\n                            zoomDelta={0.25}\n                            zoomSnap={0}\n                            minZoom={3}\n                            keyboard={false}\n                            dragging={setDragging()}\n                            // touchZoom={false}\n                            doubleClickZoom={false}\n                            maxZoom={9}\n                        >\n                            <HandleMouseHover />\n                            <ScaleControl />\n                            <GeoJSON\n                                data={indiastates.features}\n                                style={{\n                                    fillColor: \"#84857e\",\n                                    fillOpacity: 0.5,\n                                    weight: 2,\n                                    color: \"whitesmoke\",\n                                    interactive: false,\n                                }}\n                            />\n                            <LayerControlBtn setBaseLayers={setBaseLayers} baseLayers={baseLayers} layersItems={layersItems} singlebaseLayer={singlebaseLayer} setSingleBaseLayer={setSingleBaseLayer} singleLayerItems={singleLayerItems} />\n                            {baseLayers.includes(\"Rivers\") && (\n                                <GeoJSON\n                                    data={Rivers.features}\n                                    style={{\n                                        fillColor: \"none\",\n                                        weight: 2,\n                                        color: \"blue\",\n                                        interactive: false,\n                                    }}\n                                />\n                            )}\n                            {baseLayers.includes(\"indiaBasin\") && (\n                                <GeoJSON\n                                    data={indiaBasin.features}\n                                    style={{\n                                        fillColor: \"none\",\n                                        weight: 2,\n                                        color: \"darkblue\",\n                                        interactive: false,\n                                    }}\n                                />\n                            )}\n\n\n                            <div\n                                style={{\n                                    position: \"absolute\",\n                                    bottom: 10,\n                                    right: 10,\n                                    backgroundColor: \"white\",\n                                    padding: 5,\n                                }}\n                            >\n                                Lat: {mousePosition.lat.toFixed(4)}, Long:{\" \"}\n                                {mousePosition.lng.toFixed(4)}\n                            </div>\n                            <div className=\"desktop_legend_container\">\n                                {baseLayers && <Legend baseLayers={baseLayers} />}\n                            </div>\n                            <ExportMapButton mapContainerRef={mapContainerRef} mapTitle=\"Natural Disaster: Lighting\" />\n                        </MapContainer>\n                        <div className=\"phone_legend_container\">\n                            {baseLayers && <Legend baseLayers={baseLayers} />}\n                        </div>\n                    </div>\n\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default LightingMap"],"names":["Legend","_ref","baseLayers","_jsx","_Fragment","children","length","_jsxs","className","includes","color","label","map","item","style","backgroundColor","_useState","useState","lat","lng","_useState2","_slicedToArray","mousePosition","setMousePosition","mapContainerRef","useRef","HandleMouseHover","useMapEvents","mousemove","e","latlng","_useState3","_useState4","setBaseLayers","_useState5","_useState6","singlebaseLayer","setSingleBaseLayer","ref","MapContainer","center","fullscreenControl","zoom","setInitialMapZoom","setWindowWidth","attributionControl","scrollWheelZoom","zoomDelta","zoomSnap","minZoom","keyboard","dragging","setDragging","doubleClickZoom","maxZoom","ScaleControl","GeoJSON","data","indiastates","fillColor","fillOpacity","weight","interactive","LayerControlBtn","layersItems","value","singleLayerItems","Rivers","indiaBasin","position","bottom","right","padding","toFixed","ExportMapButton","mapTitle"],"sourceRoot":""}